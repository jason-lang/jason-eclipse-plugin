grammar jasonide.xtext.mas2j.Mas2j hidden(WS,SL_COMMENT,ML_COMMENT)

generate mas2j "http://www.xtext.jasonide/mas2j/Mas2j"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
//import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types

Mas2jModel
	:
		'MAS' name=ID_WITH_STARTING_LCLETTER '{'
			infrastructure=Infrastructure?
			environment=Environment?
			control=Control?
			agents=Agents
			directives=Directives?
			classpath=Classpaths?
			sourcepath=Sourcepaths?
		'}'
	;

FQN returns ecore::EString : ID ('.' ID)*;

/* Infrastructure rules */
Infrastructure: 
	'infrastructure' ':' infrastructure=ClsDef
;

/* Environment rules */
Environment:
	'environment' ':' environment=ClsDef ('at' environmentLocus=STRING)?
;

/* Control rules */
Control:
	'executionControl' ':' control=ClsDef ('at' controlLocus=STRING)?
;

/* Classpath rules */
Classpaths:
	'classpath' ':' classpath+=Classpath+
;

Classpath:
	nomeclasspath=STRING ';'
;

/* Sourcepath rules */
Sourcepaths:
	'aslSourcePath' ':' sourcepath+=Sourcepath+
;

Sourcepath:
	nomesourcepath=STRING ';'
;

/* ClassDef rules */
ParameterClsDef:
	(ClsDef | LstParametersClsDef | parameterclsint=INT_LITERAL | parameterclsstr=STRING)
;

LstParametersClsDef:
	'[' parameter+=ParameterClsDef (',' parameter+=ParameterClsDef)* ']'
;

ClsDef:
	infrastructure=FQN
	('(' parameter+=ParameterClsDef (',' parameter+=ParameterClsDef)* ')')?
;

/* Directive rules */
Directives:
	'directives' ':' directives+=Directive+
;

Directive:
	directive=ID_WITH_STARTING_LCLETTER '=' clsDirective=ClsDef ';'
;

/* Agents rules*/
Agents: 'agents' ':' agents+=Agent+;

Agent
	:
		name=ID_WITH_STARTING_LCLETTER sourceFile=FileName? options=Options?
		(
			agentArchClass+=AgentArchClass |
			beliefBaseClass+=BeliefBaseClass |
			agentClass+=AgentClass |
			instances+=Instances |
			environment+=EnvironmentLocus
		)* ';'
	;
	
FileName: 
	(path=PATH)? asid+=ID_WITH_STARTING_LCLETTER ('.' asid+=ID_WITH_STARTING_LCLETTER)?
;

PATH: STRING;

EnvironmentLocus:
	'at' environmentLocus=STRING
;

Options: '[' options+=Option (',' options+=Option)* ']';

Option: (Events | IntBels | Nrcbp | Verbose | OtherOption | Beliefs | Goals | Mindinspector);

Events
	:
		'events' '=' 
		(
				{DiscardEvents}		'discard' 
			|	{RequeueEvents}		'requeue' 
			|	{RetrieveEvents}	'retrieve'
		)
	;

IntBels
	:
		'intBels' '=' 
		(
				{SameFocus}	'sameFocus' 
			|	{NewFocus}	'newFocus'
		)
	;

Nrcbp : 'nrcbp' '=' val=INT_LITERAL	;

Verbose : 'verbose' '=' val=INT_LITERAL	;

Beliefs : 'beliefs' '=' val=STRING	;

Goals : 'goals' '=' val=STRING	;

Mindinspector : 'mindinspector' '=' val=STRING	;

OtherOption	: optionName=ID '=' (val=ID | val=STRING | int_val=INT_LITERAL)	;

AgentArchClass : 'agentArchClass' agentArchClass=ClsDef ;

BeliefBaseClass	: 'beliefBaseClass' beliefBaseClass=ClsDef	;

AgentClass : 'agentClass' agentClass=ClsDef ;

Instances : '#' instances=INT_LITERAL ;

/* General identifier */
ID : (ID_WITH_STARTING_LCLETTER | ID_WITH_STARTING_UCLETTER) ;

/* Identifier starting with a lower case letter*/
terminal ID_WITH_STARTING_LCLETTER: '^'?(LCLETTER|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
/* Identifier starting with a upper case letter*/
terminal ID_WITH_STARTING_UCLETTER: '^'?(UCLETTER|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

terminal fragment LCLETTER: ('a'..'z') ;
terminal fragment UCLETTER: ('A'..'Z') ;

terminal STRING: '"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|'"') )* '"';

terminal INT_LITERAL returns ecore::EInt : IntegerNumber;

terminal fragment IntegerNumber
    :   
	    	'0' 
	    |   '1'..'9' ('0'..'9')*    
	    |   '0' ('0'..'7')+         
	    |   HexPrefix HexDigit+        
    ;

terminal fragment HexPrefix : '0x' | '0X' ;
        
terminal fragment HexDigit : ('0'..'9'|'a'..'f'|'A'..'F') ;

/********************  Skip whitespace RULE ********************/
terminal WS : (' '|'\t'|'\r'|'\n')+;	

/********************  Skip multi-line comments RULE ********************/
terminal ML_COMMENT : '/*' -> '*/';

/********************  Skip single-line comments RULE ********************/
terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;