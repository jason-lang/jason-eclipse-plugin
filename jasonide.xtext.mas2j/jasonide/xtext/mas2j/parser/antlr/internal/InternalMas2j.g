/*
* generated by Xtext
*/
grammar InternalMas2j;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package jasonide.xtext.mas2j.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package jasonide.xtext.mas2j.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import jasonide.xtext.mas2j.services.Mas2jGrammarAccess;

}

@parser::members {

 	private Mas2jGrammarAccess grammarAccess;
 	
    public InternalMas2jParser(TokenStream input, Mas2jGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Mas2jModel";	
   	}
   	
   	@Override
   	protected Mas2jGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMas2jModel
entryRuleMas2jModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMas2jModelRule()); }
	 iv_ruleMas2jModel=ruleMas2jModel 
	 { $current=$iv_ruleMas2jModel.current; } 
	 EOF 
;

// Rule Mas2jModel
ruleMas2jModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='MAS' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMas2jModelAccess().getMASKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID_WITH_STARTING_LCLETTER
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMas2jModelAccess().getNameID_WITH_STARTING_LCLETTERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMas2jModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID_WITH_STARTING_LCLETTER");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMas2jModelAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getInfrastructureInfrastructureParserRuleCall_3_0()); 
	    }
		lv_infrastructure_3_0=ruleInfrastructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"infrastructure",
        		lv_infrastructure_3_0, 
        		"Infrastructure");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getEnvironmentEnvironmentParserRuleCall_4_0()); 
	    }
		lv_environment_4_0=ruleEnvironment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"environment",
        		lv_environment_4_0, 
        		"Environment");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getControlControlParserRuleCall_5_0()); 
	    }
		lv_control_5_0=ruleControl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"control",
        		lv_control_5_0, 
        		"Control");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getAgentsAgentsParserRuleCall_6_0()); 
	    }
		lv_agents_6_0=ruleAgents		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"agents",
        		lv_agents_6_0, 
        		"Agents");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getDirectivesDirectivesParserRuleCall_7_0()); 
	    }
		lv_directives_7_0=ruleDirectives		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"directives",
        		lv_directives_7_0, 
        		"Directives");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getClasspathClasspathsParserRuleCall_8_0()); 
	    }
		lv_classpath_8_0=ruleClasspaths		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"classpath",
        		lv_classpath_8_0, 
        		"Classpaths");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMas2jModelAccess().getSourcepathSourcepathsParserRuleCall_9_0()); 
	    }
		lv_sourcepath_9_0=ruleSourcepaths		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMas2jModelRule());
	        }
       		set(
       			$current, 
       			"sourcepath",
        		lv_sourcepath_9_0, 
        		"Sourcepaths");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMas2jModelAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFQNAccess().getIDParserRuleCall_0()); 
    }
    this_ID_0=ruleID    {
		$current.merge(this_ID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getFQNAccess().getIDParserRuleCall_1_1()); 
    }
    this_ID_2=ruleID    {
		$current.merge(this_ID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleInfrastructure
entryRuleInfrastructure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfrastructureRule()); }
	 iv_ruleInfrastructure=ruleInfrastructure 
	 { $current=$iv_ruleInfrastructure.current; } 
	 EOF 
;

// Rule Infrastructure
ruleInfrastructure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='infrastructure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfrastructureAccess().getInfrastructureKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfrastructureAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfrastructureAccess().getInfrastructureClsDefParserRuleCall_2_0()); 
	    }
		lv_infrastructure_2_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfrastructureRule());
	        }
       		set(
       			$current, 
       			"infrastructure",
        		lv_infrastructure_2_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnvironment
entryRuleEnvironment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnvironmentRule()); }
	 iv_ruleEnvironment=ruleEnvironment 
	 { $current=$iv_ruleEnvironment.current; } 
	 EOF 
;

// Rule Environment
ruleEnvironment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='environment' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnvironmentAccess().getEnvironmentKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnvironmentAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnvironmentAccess().getEnvironmentClsDefParserRuleCall_2_0()); 
	    }
		lv_environment_2_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnvironmentRule());
	        }
       		set(
       			$current, 
       			"environment",
        		lv_environment_2_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='at' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnvironmentAccess().getAtKeyword_3_0());
    }
(
(
		lv_environmentLocus_4_0=RULE_STRING
		{
			newLeafNode(lv_environmentLocus_4_0, grammarAccess.getEnvironmentAccess().getEnvironmentLocusSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnvironmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"environmentLocus",
        		lv_environmentLocus_4_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleControl
entryRuleControl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getControlRule()); }
	 iv_ruleControl=ruleControl 
	 { $current=$iv_ruleControl.current; } 
	 EOF 
;

// Rule Control
ruleControl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='executionControl' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getControlAccess().getExecutionControlKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getControlAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getControlAccess().getControlClsDefParserRuleCall_2_0()); 
	    }
		lv_control_2_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getControlRule());
	        }
       		set(
       			$current, 
       			"control",
        		lv_control_2_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='at' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getControlAccess().getAtKeyword_3_0());
    }
(
(
		lv_controlLocus_4_0=RULE_STRING
		{
			newLeafNode(lv_controlLocus_4_0, grammarAccess.getControlAccess().getControlLocusSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getControlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"controlLocus",
        		lv_controlLocus_4_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleClasspaths
entryRuleClasspaths returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClasspathsRule()); }
	 iv_ruleClasspaths=ruleClasspaths 
	 { $current=$iv_ruleClasspaths.current; } 
	 EOF 
;

// Rule Classpaths
ruleClasspaths returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='classpath' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClasspathsAccess().getClasspathKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClasspathsAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClasspathsAccess().getClasspathClasspathParserRuleCall_2_0()); 
	    }
		lv_classpath_2_0=ruleClasspath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClasspathsRule());
	        }
       		add(
       			$current, 
       			"classpath",
        		lv_classpath_2_0, 
        		"Classpath");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleClasspath
entryRuleClasspath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClasspathRule()); }
	 iv_ruleClasspath=ruleClasspath 
	 { $current=$iv_ruleClasspath.current; } 
	 EOF 
;

// Rule Classpath
ruleClasspath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nomeclasspath_0_0=RULE_STRING
		{
			newLeafNode(lv_nomeclasspath_0_0, grammarAccess.getClasspathAccess().getNomeclasspathSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClasspathRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomeclasspath",
        		lv_nomeclasspath_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClasspathAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleSourcepaths
entryRuleSourcepaths returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourcepathsRule()); }
	 iv_ruleSourcepaths=ruleSourcepaths 
	 { $current=$iv_ruleSourcepaths.current; } 
	 EOF 
;

// Rule Sourcepaths
ruleSourcepaths returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='aslSourcePath' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSourcepathsAccess().getAslSourcePathKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSourcepathsAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSourcepathsAccess().getSourcepathSourcepathParserRuleCall_2_0()); 
	    }
		lv_sourcepath_2_0=ruleSourcepath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourcepathsRule());
	        }
       		add(
       			$current, 
       			"sourcepath",
        		lv_sourcepath_2_0, 
        		"Sourcepath");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSourcepath
entryRuleSourcepath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourcepathRule()); }
	 iv_ruleSourcepath=ruleSourcepath 
	 { $current=$iv_ruleSourcepath.current; } 
	 EOF 
;

// Rule Sourcepath
ruleSourcepath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nomesourcepath_0_0=RULE_STRING
		{
			newLeafNode(lv_nomesourcepath_0_0, grammarAccess.getSourcepathAccess().getNomesourcepathSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourcepathRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nomesourcepath",
        		lv_nomesourcepath_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSourcepathAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleParameterClsDef
entryRuleParameterClsDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterClsDefRule()); }
	 iv_ruleParameterClsDef=ruleParameterClsDef 
	 { $current=$iv_ruleParameterClsDef.current; } 
	 EOF 
;

// Rule ParameterClsDef
ruleParameterClsDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getParameterClsDefAccess().getClsDefParserRuleCall_0()); 
    }
    this_ClsDef_0=ruleClsDef
    { 
        $current = $this_ClsDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getParameterClsDefAccess().getLstParametersClsDefParserRuleCall_1()); 
    }
    this_LstParametersClsDef_1=ruleLstParametersClsDef
    { 
        $current = $this_LstParametersClsDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(
(
		lv_parameterclsint_2_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_parameterclsint_2_0, grammarAccess.getParameterClsDefAccess().getParameterclsintINT_LITERALTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterClsDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parameterclsint",
        		lv_parameterclsint_2_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		lv_parameterclsstr_3_0=RULE_STRING
		{
			newLeafNode(lv_parameterclsstr_3_0, grammarAccess.getParameterClsDefAccess().getParameterclsstrSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterClsDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parameterclsstr",
        		lv_parameterclsstr_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleLstParametersClsDef
entryRuleLstParametersClsDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLstParametersClsDefRule()); }
	 iv_ruleLstParametersClsDef=ruleLstParametersClsDef 
	 { $current=$iv_ruleLstParametersClsDef.current; } 
	 EOF 
;

// Rule LstParametersClsDef
ruleLstParametersClsDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLstParametersClsDefAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLstParametersClsDefAccess().getParameterParameterClsDefParserRuleCall_1_0()); 
	    }
		lv_parameter_1_0=ruleParameterClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLstParametersClsDefRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_1_0, 
        		"ParameterClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLstParametersClsDefAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLstParametersClsDefAccess().getParameterParameterClsDefParserRuleCall_2_1_0()); 
	    }
		lv_parameter_3_0=ruleParameterClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLstParametersClsDefRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_3_0, 
        		"ParameterClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLstParametersClsDefAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleClsDef
entryRuleClsDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClsDefRule()); }
	 iv_ruleClsDef=ruleClsDef 
	 { $current=$iv_ruleClsDef.current; } 
	 EOF 
;

// Rule ClsDef
ruleClsDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getClsDefAccess().getInfrastructureFQNParserRuleCall_0_0()); 
	    }
		lv_infrastructure_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClsDefRule());
	        }
       		set(
       			$current, 
       			"infrastructure",
        		lv_infrastructure_0_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClsDefAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClsDefAccess().getParameterParameterClsDefParserRuleCall_1_1_0()); 
	    }
		lv_parameter_2_0=ruleParameterClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClsDefRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_2_0, 
        		"ParameterClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClsDefAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClsDefAccess().getParameterParameterClsDefParserRuleCall_1_2_1_0()); 
	    }
		lv_parameter_4_0=ruleParameterClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClsDefRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_4_0, 
        		"ParameterClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClsDefAccess().getRightParenthesisKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleDirectives
entryRuleDirectives returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectivesRule()); }
	 iv_ruleDirectives=ruleDirectives 
	 { $current=$iv_ruleDirectives.current; } 
	 EOF 
;

// Rule Directives
ruleDirectives returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='directives' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirectivesAccess().getDirectivesKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirectivesAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectivesAccess().getDirectivesDirectiveParserRuleCall_2_0()); 
	    }
		lv_directives_2_0=ruleDirective		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectivesRule());
	        }
       		add(
       			$current, 
       			"directives",
        		lv_directives_2_0, 
        		"Directive");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleDirective
entryRuleDirective returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectiveRule()); }
	 iv_ruleDirective=ruleDirective 
	 { $current=$iv_ruleDirective.current; } 
	 EOF 
;

// Rule Directive
ruleDirective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_directive_0_0=RULE_ID_WITH_STARTING_LCLETTER
		{
			newLeafNode(lv_directive_0_0, grammarAccess.getDirectiveAccess().getDirectiveID_WITH_STARTING_LCLETTERTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirectiveRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"directive",
        		lv_directive_0_0, 
        		"ID_WITH_STARTING_LCLETTER");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirectiveAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectiveAccess().getClsDirectiveClsDefParserRuleCall_2_0()); 
	    }
		lv_clsDirective_2_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectiveRule());
	        }
       		set(
       			$current, 
       			"clsDirective",
        		lv_clsDirective_2_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDirectiveAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleAgents
entryRuleAgents returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentsRule()); }
	 iv_ruleAgents=ruleAgents 
	 { $current=$iv_ruleAgents.current; } 
	 EOF 
;

// Rule Agents
ruleAgents returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='agents' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgentsAccess().getAgentsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAgentsAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentsAccess().getAgentsAgentParserRuleCall_2_0()); 
	    }
		lv_agents_2_0=ruleAgent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentsRule());
	        }
       		add(
       			$current, 
       			"agents",
        		lv_agents_2_0, 
        		"Agent");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	 iv_ruleAgent=ruleAgent 
	 { $current=$iv_ruleAgent.current; } 
	 EOF 
;

// Rule Agent
ruleAgent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID_WITH_STARTING_LCLETTER
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAgentAccess().getNameID_WITH_STARTING_LCLETTERTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID_WITH_STARTING_LCLETTER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getSourceFileFileNameParserRuleCall_1_0()); 
	    }
		lv_sourceFile_1_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		set(
       			$current, 
       			"sourceFile",
        		lv_sourceFile_1_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getOptionsOptionsParserRuleCall_2_0()); 
	    }
		lv_options_2_0=ruleOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		set(
       			$current, 
       			"options",
        		lv_options_2_0, 
        		"Options");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getAgentArchClassAgentArchClassParserRuleCall_3_0_0()); 
	    }
		lv_agentArchClass_3_0=ruleAgentArchClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"agentArchClass",
        		lv_agentArchClass_3_0, 
        		"AgentArchClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getBeliefBaseClassBeliefBaseClassParserRuleCall_3_1_0()); 
	    }
		lv_beliefBaseClass_4_0=ruleBeliefBaseClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"beliefBaseClass",
        		lv_beliefBaseClass_4_0, 
        		"BeliefBaseClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getAgentClassAgentClassParserRuleCall_3_2_0()); 
	    }
		lv_agentClass_5_0=ruleAgentClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"agentClass",
        		lv_agentClass_5_0, 
        		"AgentClass");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getInstancesInstancesParserRuleCall_3_3_0()); 
	    }
		lv_instances_6_0=ruleInstances		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_6_0, 
        		"Instances");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getEnvironmentEnvironmentLocusParserRuleCall_3_4_0()); 
	    }
		lv_environment_7_0=ruleEnvironmentLocus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"environment",
        		lv_environment_7_0, 
        		"EnvironmentLocus");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAgentAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleFileName
entryRuleFileName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileNameRule()); }
	 iv_ruleFileName=ruleFileName 
	 { $current=$iv_ruleFileName.current; } 
	 EOF 
;

// Rule FileName
ruleFileName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFileNameAccess().getPathPATHParserRuleCall_0_0()); 
	    }
		lv_path_0_0=rulePATH		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileNameRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"PATH");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_asid_1_0=RULE_ID_WITH_STARTING_LCLETTER
		{
			newLeafNode(lv_asid_1_0, grammarAccess.getFileNameAccess().getAsidID_WITH_STARTING_LCLETTERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"asid",
        		lv_asid_1_0, 
        		"ID_WITH_STARTING_LCLETTER");
	    }

)
)(	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFileNameAccess().getFullStopKeyword_2_0());
    }
(
(
		lv_asid_3_0=RULE_ID_WITH_STARTING_LCLETTER
		{
			newLeafNode(lv_asid_3_0, grammarAccess.getFileNameAccess().getAsidID_WITH_STARTING_LCLETTERTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"asid",
        		lv_asid_3_0, 
        		"ID_WITH_STARTING_LCLETTER");
	    }

)
))?)
;





// Entry rule entryRulePATH
entryRulePATH returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPATHRule()); } 
	 iv_rulePATH=rulePATH 
	 { $current=$iv_rulePATH.current.getText(); }  
	 EOF 
;

// Rule PATH
rulePATH returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getPATHAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleEnvironmentLocus
entryRuleEnvironmentLocus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnvironmentLocusRule()); }
	 iv_ruleEnvironmentLocus=ruleEnvironmentLocus 
	 { $current=$iv_ruleEnvironmentLocus.current; } 
	 EOF 
;

// Rule EnvironmentLocus
ruleEnvironmentLocus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='at' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnvironmentLocusAccess().getAtKeyword_0());
    }
(
(
		lv_environmentLocus_1_0=RULE_STRING
		{
			newLeafNode(lv_environmentLocus_1_0, grammarAccess.getEnvironmentLocusAccess().getEnvironmentLocusSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnvironmentLocusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"environmentLocus",
        		lv_environmentLocus_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleOptions
entryRuleOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionsRule()); }
	 iv_ruleOptions=ruleOptions 
	 { $current=$iv_ruleOptions.current; } 
	 EOF 
;

// Rule Options
ruleOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOptionsAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getOptionsOptionParserRuleCall_1_0()); 
	    }
		lv_options_1_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_1_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionsAccess().getOptionsOptionParserRuleCall_2_1_0()); 
	    }
		lv_options_3_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionsRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_3_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionsAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	 iv_ruleOption=ruleOption 
	 { $current=$iv_ruleOption.current; } 
	 EOF 
;

// Rule Option
ruleOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getEventsParserRuleCall_0()); 
    }
    this_Events_0=ruleEvents
    { 
        $current = $this_Events_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getIntBelsParserRuleCall_1()); 
    }
    this_IntBels_1=ruleIntBels
    { 
        $current = $this_IntBels_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getNrcbpParserRuleCall_2()); 
    }
    this_Nrcbp_2=ruleNrcbp
    { 
        $current = $this_Nrcbp_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getVerboseParserRuleCall_3()); 
    }
    this_Verbose_3=ruleVerbose
    { 
        $current = $this_Verbose_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAccess().getOtherOptionParserRuleCall_4()); 
    }
    this_OtherOption_4=ruleOtherOption
    { 
        $current = $this_OtherOption_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEvents
entryRuleEvents returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventsRule()); }
	 iv_ruleEvents=ruleEvents 
	 { $current=$iv_ruleEvents.current; } 
	 EOF 
;

// Rule Events
ruleEvents returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='events' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEventsAccess().getEventsKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventsAccess().getEqualsSignKeyword_1());
    }
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventsAccess().getDiscardEventsAction_2_0_0(),
            $current);
    }
)	otherlv_3='discard' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEventsAccess().getDiscardKeyword_2_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventsAccess().getRequeueEventsAction_2_1_0(),
            $current);
    }
)	otherlv_5='requeue' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEventsAccess().getRequeueKeyword_2_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventsAccess().getRetrieveEventsAction_2_2_0(),
            $current);
    }
)	otherlv_7='retrieve' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEventsAccess().getRetrieveKeyword_2_2_1());
    }
)))
;





// Entry rule entryRuleIntBels
entryRuleIntBels returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntBelsRule()); }
	 iv_ruleIntBels=ruleIntBels 
	 { $current=$iv_ruleIntBels.current; } 
	 EOF 
;

// Rule IntBels
ruleIntBels returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='intBels' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntBelsAccess().getIntBelsKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntBelsAccess().getEqualsSignKeyword_1());
    }
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntBelsAccess().getSameFocusAction_2_0_0(),
            $current);
    }
)	otherlv_3='sameFocus' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntBelsAccess().getSameFocusKeyword_2_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntBelsAccess().getNewFocusAction_2_1_0(),
            $current);
    }
)	otherlv_5='newFocus' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntBelsAccess().getNewFocusKeyword_2_1_1());
    }
)))
;





// Entry rule entryRuleNrcbp
entryRuleNrcbp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNrcbpRule()); }
	 iv_ruleNrcbp=ruleNrcbp 
	 { $current=$iv_ruleNrcbp.current; } 
	 EOF 
;

// Rule Nrcbp
ruleNrcbp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='nrcbp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNrcbpAccess().getNrcbpKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNrcbpAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_val_2_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_2_0, grammarAccess.getNrcbpAccess().getValINT_LITERALTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNrcbpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_2_0, 
        		"INT_LITERAL");
	    }

)
))
;





// Entry rule entryRuleVerbose
entryRuleVerbose returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerboseRule()); }
	 iv_ruleVerbose=ruleVerbose 
	 { $current=$iv_ruleVerbose.current; } 
	 EOF 
;

// Rule Verbose
ruleVerbose returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='verbose' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerboseAccess().getVerboseKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerboseAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_val_2_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_2_0, grammarAccess.getVerboseAccess().getValINT_LITERALTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerboseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_2_0, 
        		"INT_LITERAL");
	    }

)
))
;





// Entry rule entryRuleOtherOption
entryRuleOtherOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOtherOptionRule()); }
	 iv_ruleOtherOption=ruleOtherOption 
	 { $current=$iv_ruleOtherOption.current; } 
	 EOF 
;

// Rule OtherOption
ruleOtherOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOtherOptionAccess().getOptionNameIDParserRuleCall_0_0()); 
	    }
		lv_optionName_0_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherOptionRule());
	        }
       		set(
       			$current, 
       			"optionName",
        		lv_optionName_0_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOtherOptionAccess().getEqualsSignKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOtherOptionAccess().getValIDParserRuleCall_2_0_0()); 
	    }
		lv_val_2_0=ruleID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOtherOptionRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_2_0, 
        		"ID");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_val_3_0=RULE_STRING
		{
			newLeafNode(lv_val_3_0, grammarAccess.getOtherOptionAccess().getValSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherOptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_int_val_4_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_int_val_4_0, grammarAccess.getOtherOptionAccess().getInt_valINT_LITERALTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOtherOptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int_val",
        		lv_int_val_4_0, 
        		"INT_LITERAL");
	    }

)
)))
;





// Entry rule entryRuleAgentArchClass
entryRuleAgentArchClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentArchClassRule()); }
	 iv_ruleAgentArchClass=ruleAgentArchClass 
	 { $current=$iv_ruleAgentArchClass.current; } 
	 EOF 
;

// Rule AgentArchClass
ruleAgentArchClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='agentArchClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgentArchClassAccess().getAgentArchClassKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentArchClassAccess().getAgentArchClassClsDefParserRuleCall_1_0()); 
	    }
		lv_agentArchClass_1_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentArchClassRule());
	        }
       		set(
       			$current, 
       			"agentArchClass",
        		lv_agentArchClass_1_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBeliefBaseClass
entryRuleBeliefBaseClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBeliefBaseClassRule()); }
	 iv_ruleBeliefBaseClass=ruleBeliefBaseClass 
	 { $current=$iv_ruleBeliefBaseClass.current; } 
	 EOF 
;

// Rule BeliefBaseClass
ruleBeliefBaseClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='beliefBaseClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBeliefBaseClassAccess().getBeliefBaseClassKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBeliefBaseClassAccess().getBeliefBaseClassClsDefParserRuleCall_1_0()); 
	    }
		lv_beliefBaseClass_1_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBeliefBaseClassRule());
	        }
       		set(
       			$current, 
       			"beliefBaseClass",
        		lv_beliefBaseClass_1_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAgentClass
entryRuleAgentClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentClassRule()); }
	 iv_ruleAgentClass=ruleAgentClass 
	 { $current=$iv_ruleAgentClass.current; } 
	 EOF 
;

// Rule AgentClass
ruleAgentClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='agentClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgentClassAccess().getAgentClassKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentClassAccess().getAgentClassClsDefParserRuleCall_1_0()); 
	    }
		lv_agentClass_1_0=ruleClsDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentClassRule());
	        }
       		set(
       			$current, 
       			"agentClass",
        		lv_agentClass_1_0, 
        		"ClsDef");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstances
entryRuleInstances returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstancesRule()); }
	 iv_ruleInstances=ruleInstances 
	 { $current=$iv_ruleInstances.current; } 
	 EOF 
;

// Rule Instances
ruleInstances returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstancesAccess().getNumberSignKeyword_0());
    }
(
(
		lv_instances_1_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_instances_1_0, grammarAccess.getInstancesAccess().getInstancesINT_LITERALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstancesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"instances",
        		lv_instances_1_0, 
        		"INT_LITERAL");
	    }

)
))
;





// Entry rule entryRuleID
entryRuleID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDRule()); } 
	 iv_ruleID=ruleID 
	 { $current=$iv_ruleID.current.getText(); }  
	 EOF 
;

// Rule ID
ruleID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_WITH_STARTING_LCLETTER_0=RULE_ID_WITH_STARTING_LCLETTER    {
		$current.merge(this_ID_WITH_STARTING_LCLETTER_0);
    }

    { 
    newLeafNode(this_ID_WITH_STARTING_LCLETTER_0, grammarAccess.getIDAccess().getID_WITH_STARTING_LCLETTERTerminalRuleCall_0()); 
    }

    |    this_ID_WITH_STARTING_UCLETTER_1=RULE_ID_WITH_STARTING_UCLETTER    {
		$current.merge(this_ID_WITH_STARTING_UCLETTER_1);
    }

    { 
    newLeafNode(this_ID_WITH_STARTING_UCLETTER_1, grammarAccess.getIDAccess().getID_WITH_STARTING_UCLETTERTerminalRuleCall_1()); 
    }
)
    ;





RULE_ID_WITH_STARTING_LCLETTER : '^'? (RULE_LCLETTER|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID_WITH_STARTING_UCLETTER : '^'? (RULE_UCLETTER|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_LCLETTER : 'a'..'z';

fragment RULE_UCLETTER : 'A'..'Z';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_INT_LITERAL : RULE_INTEGERNUMBER;

fragment RULE_INTEGERNUMBER : ('0'|'1'..'9' ('0'..'9')*|'0' ('0'..'7')+|RULE_HEXPREFIX RULE_HEXDIGIT+);

fragment RULE_HEXPREFIX : ('0x'|'0X');

fragment RULE_HEXDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;


