/*
 * generated by Xtext 2.23.0
 */
package jasonide.xtext.mas2j.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import jasonide.xtext.mas2j.ide.contentassist.antlr.internal.InternalMas2jParser;
import jasonide.xtext.mas2j.services.Mas2jGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class Mas2jParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(Mas2jGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, Mas2jGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getParameterClsDefAccess().getAlternatives(), "rule__ParameterClsDef__Alternatives");
			builder.put(grammarAccess.getAgentAccess().getAlternatives_3(), "rule__Agent__Alternatives_3");
			builder.put(grammarAccess.getOptionAccess().getAlternatives(), "rule__Option__Alternatives");
			builder.put(grammarAccess.getEventsAccess().getAlternatives_2(), "rule__Events__Alternatives_2");
			builder.put(grammarAccess.getIntBelsAccess().getAlternatives_2(), "rule__IntBels__Alternatives_2");
			builder.put(grammarAccess.getOtherOptionAccess().getAlternatives_2(), "rule__OtherOption__Alternatives_2");
			builder.put(grammarAccess.getIDAccess().getAlternatives(), "rule__ID__Alternatives");
			builder.put(grammarAccess.getMas2jModelAccess().getGroup(), "rule__Mas2jModel__Group__0");
			builder.put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
			builder.put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
			builder.put(grammarAccess.getInfrastructureAccess().getGroup(), "rule__Infrastructure__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
			builder.put(grammarAccess.getEnvironmentAccess().getGroup_3(), "rule__Environment__Group_3__0");
			builder.put(grammarAccess.getControlAccess().getGroup(), "rule__Control__Group__0");
			builder.put(grammarAccess.getControlAccess().getGroup_3(), "rule__Control__Group_3__0");
			builder.put(grammarAccess.getClasspathsAccess().getGroup(), "rule__Classpaths__Group__0");
			builder.put(grammarAccess.getClasspathAccess().getGroup(), "rule__Classpath__Group__0");
			builder.put(grammarAccess.getSourcepathsAccess().getGroup(), "rule__Sourcepaths__Group__0");
			builder.put(grammarAccess.getSourcepathAccess().getGroup(), "rule__Sourcepath__Group__0");
			builder.put(grammarAccess.getLstParametersClsDefAccess().getGroup(), "rule__LstParametersClsDef__Group__0");
			builder.put(grammarAccess.getLstParametersClsDefAccess().getGroup_2(), "rule__LstParametersClsDef__Group_2__0");
			builder.put(grammarAccess.getClsDefAccess().getGroup(), "rule__ClsDef__Group__0");
			builder.put(grammarAccess.getClsDefAccess().getGroup_1(), "rule__ClsDef__Group_1__0");
			builder.put(grammarAccess.getClsDefAccess().getGroup_1_2(), "rule__ClsDef__Group_1_2__0");
			builder.put(grammarAccess.getDirectivesAccess().getGroup(), "rule__Directives__Group__0");
			builder.put(grammarAccess.getDirectiveAccess().getGroup(), "rule__Directive__Group__0");
			builder.put(grammarAccess.getAgentsAccess().getGroup(), "rule__Agents__Group__0");
			builder.put(grammarAccess.getAgentAccess().getGroup(), "rule__Agent__Group__0");
			builder.put(grammarAccess.getFileNameAccess().getGroup(), "rule__FileName__Group__0");
			builder.put(grammarAccess.getFileNameAccess().getGroup_2(), "rule__FileName__Group_2__0");
			builder.put(grammarAccess.getEnvironmentLocusAccess().getGroup(), "rule__EnvironmentLocus__Group__0");
			builder.put(grammarAccess.getOptionsAccess().getGroup(), "rule__Options__Group__0");
			builder.put(grammarAccess.getOptionsAccess().getGroup_2(), "rule__Options__Group_2__0");
			builder.put(grammarAccess.getEventsAccess().getGroup(), "rule__Events__Group__0");
			builder.put(grammarAccess.getEventsAccess().getGroup_2_0(), "rule__Events__Group_2_0__0");
			builder.put(grammarAccess.getEventsAccess().getGroup_2_1(), "rule__Events__Group_2_1__0");
			builder.put(grammarAccess.getEventsAccess().getGroup_2_2(), "rule__Events__Group_2_2__0");
			builder.put(grammarAccess.getIntBelsAccess().getGroup(), "rule__IntBels__Group__0");
			builder.put(grammarAccess.getIntBelsAccess().getGroup_2_0(), "rule__IntBels__Group_2_0__0");
			builder.put(grammarAccess.getIntBelsAccess().getGroup_2_1(), "rule__IntBels__Group_2_1__0");
			builder.put(grammarAccess.getNrcbpAccess().getGroup(), "rule__Nrcbp__Group__0");
			builder.put(grammarAccess.getVerboseAccess().getGroup(), "rule__Verbose__Group__0");
			builder.put(grammarAccess.getBeliefsAccess().getGroup(), "rule__Beliefs__Group__0");
			builder.put(grammarAccess.getGoalsAccess().getGroup(), "rule__Goals__Group__0");
			builder.put(grammarAccess.getMindinspectorAccess().getGroup(), "rule__Mindinspector__Group__0");
			builder.put(grammarAccess.getOtherOptionAccess().getGroup(), "rule__OtherOption__Group__0");
			builder.put(grammarAccess.getAgentArchClassAccess().getGroup(), "rule__AgentArchClass__Group__0");
			builder.put(grammarAccess.getBeliefBaseClassAccess().getGroup(), "rule__BeliefBaseClass__Group__0");
			builder.put(grammarAccess.getAgentClassAccess().getGroup(), "rule__AgentClass__Group__0");
			builder.put(grammarAccess.getInstancesAccess().getGroup(), "rule__Instances__Group__0");
			builder.put(grammarAccess.getMas2jModelAccess().getNameAssignment_1(), "rule__Mas2jModel__NameAssignment_1");
			builder.put(grammarAccess.getMas2jModelAccess().getInfrastructureAssignment_3(), "rule__Mas2jModel__InfrastructureAssignment_3");
			builder.put(grammarAccess.getMas2jModelAccess().getEnvironmentAssignment_4(), "rule__Mas2jModel__EnvironmentAssignment_4");
			builder.put(grammarAccess.getMas2jModelAccess().getControlAssignment_5(), "rule__Mas2jModel__ControlAssignment_5");
			builder.put(grammarAccess.getMas2jModelAccess().getAgentsAssignment_6(), "rule__Mas2jModel__AgentsAssignment_6");
			builder.put(grammarAccess.getMas2jModelAccess().getDirectivesAssignment_7(), "rule__Mas2jModel__DirectivesAssignment_7");
			builder.put(grammarAccess.getMas2jModelAccess().getClasspathAssignment_8(), "rule__Mas2jModel__ClasspathAssignment_8");
			builder.put(grammarAccess.getMas2jModelAccess().getSourcepathAssignment_9(), "rule__Mas2jModel__SourcepathAssignment_9");
			builder.put(grammarAccess.getInfrastructureAccess().getInfrastructureAssignment_2(), "rule__Infrastructure__InfrastructureAssignment_2");
			builder.put(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_2(), "rule__Environment__EnvironmentAssignment_2");
			builder.put(grammarAccess.getEnvironmentAccess().getEnvironmentLocusAssignment_3_1(), "rule__Environment__EnvironmentLocusAssignment_3_1");
			builder.put(grammarAccess.getControlAccess().getControlAssignment_2(), "rule__Control__ControlAssignment_2");
			builder.put(grammarAccess.getControlAccess().getControlLocusAssignment_3_1(), "rule__Control__ControlLocusAssignment_3_1");
			builder.put(grammarAccess.getClasspathsAccess().getClasspathAssignment_2(), "rule__Classpaths__ClasspathAssignment_2");
			builder.put(grammarAccess.getClasspathAccess().getNomeclasspathAssignment_0(), "rule__Classpath__NomeclasspathAssignment_0");
			builder.put(grammarAccess.getSourcepathsAccess().getSourcepathAssignment_2(), "rule__Sourcepaths__SourcepathAssignment_2");
			builder.put(grammarAccess.getSourcepathAccess().getNomesourcepathAssignment_0(), "rule__Sourcepath__NomesourcepathAssignment_0");
			builder.put(grammarAccess.getParameterClsDefAccess().getParameterclsintAssignment_2(), "rule__ParameterClsDef__ParameterclsintAssignment_2");
			builder.put(grammarAccess.getParameterClsDefAccess().getParameterclsstrAssignment_3(), "rule__ParameterClsDef__ParameterclsstrAssignment_3");
			builder.put(grammarAccess.getLstParametersClsDefAccess().getParameterAssignment_1(), "rule__LstParametersClsDef__ParameterAssignment_1");
			builder.put(grammarAccess.getLstParametersClsDefAccess().getParameterAssignment_2_1(), "rule__LstParametersClsDef__ParameterAssignment_2_1");
			builder.put(grammarAccess.getClsDefAccess().getInfrastructureAssignment_0(), "rule__ClsDef__InfrastructureAssignment_0");
			builder.put(grammarAccess.getClsDefAccess().getParameterAssignment_1_1(), "rule__ClsDef__ParameterAssignment_1_1");
			builder.put(grammarAccess.getClsDefAccess().getParameterAssignment_1_2_1(), "rule__ClsDef__ParameterAssignment_1_2_1");
			builder.put(grammarAccess.getDirectivesAccess().getDirectivesAssignment_2(), "rule__Directives__DirectivesAssignment_2");
			builder.put(grammarAccess.getDirectiveAccess().getDirectiveAssignment_0(), "rule__Directive__DirectiveAssignment_0");
			builder.put(grammarAccess.getDirectiveAccess().getClsDirectiveAssignment_2(), "rule__Directive__ClsDirectiveAssignment_2");
			builder.put(grammarAccess.getAgentsAccess().getAgentsAssignment_2(), "rule__Agents__AgentsAssignment_2");
			builder.put(grammarAccess.getAgentAccess().getNameAssignment_0(), "rule__Agent__NameAssignment_0");
			builder.put(grammarAccess.getAgentAccess().getSourceFileAssignment_1(), "rule__Agent__SourceFileAssignment_1");
			builder.put(grammarAccess.getAgentAccess().getOptionsAssignment_2(), "rule__Agent__OptionsAssignment_2");
			builder.put(grammarAccess.getAgentAccess().getAgentArchClassAssignment_3_0(), "rule__Agent__AgentArchClassAssignment_3_0");
			builder.put(grammarAccess.getAgentAccess().getBeliefBaseClassAssignment_3_1(), "rule__Agent__BeliefBaseClassAssignment_3_1");
			builder.put(grammarAccess.getAgentAccess().getAgentClassAssignment_3_2(), "rule__Agent__AgentClassAssignment_3_2");
			builder.put(grammarAccess.getAgentAccess().getInstancesAssignment_3_3(), "rule__Agent__InstancesAssignment_3_3");
			builder.put(grammarAccess.getAgentAccess().getEnvironmentAssignment_3_4(), "rule__Agent__EnvironmentAssignment_3_4");
			builder.put(grammarAccess.getFileNameAccess().getPathAssignment_0(), "rule__FileName__PathAssignment_0");
			builder.put(grammarAccess.getFileNameAccess().getAsidAssignment_1(), "rule__FileName__AsidAssignment_1");
			builder.put(grammarAccess.getFileNameAccess().getAsidAssignment_2_1(), "rule__FileName__AsidAssignment_2_1");
			builder.put(grammarAccess.getEnvironmentLocusAccess().getEnvironmentLocusAssignment_1(), "rule__EnvironmentLocus__EnvironmentLocusAssignment_1");
			builder.put(grammarAccess.getOptionsAccess().getOptionsAssignment_1(), "rule__Options__OptionsAssignment_1");
			builder.put(grammarAccess.getOptionsAccess().getOptionsAssignment_2_1(), "rule__Options__OptionsAssignment_2_1");
			builder.put(grammarAccess.getNrcbpAccess().getValAssignment_2(), "rule__Nrcbp__ValAssignment_2");
			builder.put(grammarAccess.getVerboseAccess().getValAssignment_2(), "rule__Verbose__ValAssignment_2");
			builder.put(grammarAccess.getBeliefsAccess().getValAssignment_2(), "rule__Beliefs__ValAssignment_2");
			builder.put(grammarAccess.getGoalsAccess().getValAssignment_2(), "rule__Goals__ValAssignment_2");
			builder.put(grammarAccess.getMindinspectorAccess().getValAssignment_2(), "rule__Mindinspector__ValAssignment_2");
			builder.put(grammarAccess.getOtherOptionAccess().getOptionNameAssignment_0(), "rule__OtherOption__OptionNameAssignment_0");
			builder.put(grammarAccess.getOtherOptionAccess().getValAssignment_2_0(), "rule__OtherOption__ValAssignment_2_0");
			builder.put(grammarAccess.getOtherOptionAccess().getValAssignment_2_1(), "rule__OtherOption__ValAssignment_2_1");
			builder.put(grammarAccess.getOtherOptionAccess().getInt_valAssignment_2_2(), "rule__OtherOption__Int_valAssignment_2_2");
			builder.put(grammarAccess.getAgentArchClassAccess().getAgentArchClassAssignment_1(), "rule__AgentArchClass__AgentArchClassAssignment_1");
			builder.put(grammarAccess.getBeliefBaseClassAccess().getBeliefBaseClassAssignment_1(), "rule__BeliefBaseClass__BeliefBaseClassAssignment_1");
			builder.put(grammarAccess.getAgentClassAccess().getAgentClassAssignment_1(), "rule__AgentClass__AgentClassAssignment_1");
			builder.put(grammarAccess.getInstancesAccess().getInstancesAssignment_1(), "rule__Instances__InstancesAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private Mas2jGrammarAccess grammarAccess;

	@Override
	protected InternalMas2jParser createParser() {
		InternalMas2jParser result = new InternalMas2jParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT" };
	}

	public Mas2jGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(Mas2jGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
