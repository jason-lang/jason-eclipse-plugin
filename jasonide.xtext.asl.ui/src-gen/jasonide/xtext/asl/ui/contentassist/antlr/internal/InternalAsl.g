/*
* generated by Xtext
*/
grammar InternalAsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	 memoize=true;
	
}

@lexer::header {
package jasonide.xtext.asl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jasonide.xtext.asl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import jasonide.xtext.asl.services.AslGrammarAccess;

}

@parser::members {
 
 	private AslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAgent
entryRuleAgent 
:
{ before(grammarAccess.getAgentRule()); }
	 ruleAgent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule Agent
ruleAgent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAgentAccess().getGroup()); }
(rule__Agent__Group__0)
{ after(grammarAccess.getAgentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirective
entryRuleDirective 
:
{ before(grammarAccess.getDirectiveRule()); }
	 ruleDirective
{ after(grammarAccess.getDirectiveRule()); } 
	 EOF 
;

// Rule Directive
ruleDirective
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectiveAccess().getGroup()); }
(rule__Directive__Group__0)
{ after(grammarAccess.getDirectiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBelief
entryRuleBelief 
:
{ before(grammarAccess.getBeliefRule()); }
	 ruleBelief
{ after(grammarAccess.getBeliefRule()); } 
	 EOF 
;

// Rule Belief
ruleBelief
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBeliefAccess().getGroup()); }
(rule__Belief__Group__0)
{ after(grammarAccess.getBeliefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitial_goal
entryRuleInitial_goal 
:
{ before(grammarAccess.getInitial_goalRule()); }
	 ruleInitial_goal
{ after(grammarAccess.getInitial_goalRule()); } 
	 EOF 
;

// Rule Initial_goal
ruleInitial_goal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitial_goalAccess().getGroup()); }
(rule__Initial_goal__Group__0)
{ after(grammarAccess.getInitial_goalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan
entryRulePlan 
:
{ before(grammarAccess.getPlanRule()); }
	 rulePlan
{ after(grammarAccess.getPlanRule()); } 
	 EOF 
;

// Rule Plan
rulePlan
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlanAccess().getGroup()); }
(rule__Plan__Group__0)
{ after(grammarAccess.getPlanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrigger
entryRuleTrigger 
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerAccess().getGroup()); }
(rule__Trigger__Group__0)
{ after(grammarAccess.getTriggerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggerSymbol
entryRuleTriggerSymbol 
:
{ before(grammarAccess.getTriggerSymbolRule()); }
	 ruleTriggerSymbol
{ after(grammarAccess.getTriggerSymbolRule()); } 
	 EOF 
;

// Rule TriggerSymbol
ruleTriggerSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerSymbolAccess().getGroup()); }
(rule__TriggerSymbol__Group__0)
{ after(grammarAccess.getTriggerSymbolAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan_body
entryRulePlan_body 
:
{ before(grammarAccess.getPlan_bodyRule()); }
	 rulePlan_body
{ after(grammarAccess.getPlan_bodyRule()); } 
	 EOF 
;

// Rule Plan_body
rulePlan_body
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlan_bodyAccess().getGroup()); }
(rule__Plan_body__Group__0)
{ after(grammarAccess.getPlan_bodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan_body_term
entryRulePlan_body_term 
:
{ before(grammarAccess.getPlan_body_termRule()); }
	 rulePlan_body_term
{ after(grammarAccess.getPlan_body_termRule()); } 
	 EOF 
;

// Rule Plan_body_term
rulePlan_body_term
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlan_body_termAccess().getGroup()); }
(rule__Plan_body_term__Group__0)
{ after(grammarAccess.getPlan_body_termAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan_body_factor
entryRulePlan_body_factor 
:
{ before(grammarAccess.getPlan_body_factorRule()); }
	 rulePlan_body_factor
{ after(grammarAccess.getPlan_body_factorRule()); } 
	 EOF 
;

// Rule Plan_body_factor
rulePlan_body_factor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlan_body_factorAccess().getGroup()); }
(rule__Plan_body_factor__Group__0)
{ after(grammarAccess.getPlan_body_factorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtIF
entryRuleStmtIF 
:
{ before(grammarAccess.getStmtIFRule()); }
	 ruleStmtIF
{ after(grammarAccess.getStmtIFRule()); } 
	 EOF 
;

// Rule StmtIF
ruleStmtIF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtIFAccess().getGroup()); }
(rule__StmtIF__Group__0)
{ after(grammarAccess.getStmtIFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtFOR
entryRuleStmtFOR 
:
{ before(grammarAccess.getStmtFORRule()); }
	 ruleStmtFOR
{ after(grammarAccess.getStmtFORRule()); } 
	 EOF 
;

// Rule StmtFOR
ruleStmtFOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtFORAccess().getGroup()); }
(rule__StmtFOR__Group__0)
{ after(grammarAccess.getStmtFORAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtWHILE
entryRuleStmtWHILE 
:
{ before(grammarAccess.getStmtWHILERule()); }
	 ruleStmtWHILE
{ after(grammarAccess.getStmtWHILERule()); } 
	 EOF 
;

// Rule StmtWHILE
ruleStmtWHILE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtWHILEAccess().getGroup()); }
(rule__StmtWHILE__Group__0)
{ after(grammarAccess.getStmtWHILEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody_formula
entryRuleBody_formula 
:
{ before(grammarAccess.getBody_formulaRule()); }
	 ruleBody_formula
{ after(grammarAccess.getBody_formulaRule()); } 
	 EOF 
;

// Rule Body_formula
ruleBody_formula
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBody_formulaAccess().getGroup()); }
(rule__Body_formula__Group__0)
{ after(grammarAccess.getBody_formulaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlan_term
entryRulePlan_term 
:
{ before(grammarAccess.getPlan_termRule()); }
	 rulePlan_term
{ after(grammarAccess.getPlan_termRule()); } 
	 EOF 
;

// Rule Plan_term
rulePlan_term
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlan_termAccess().getGroup()); }
(rule__Plan_term__Group__0)
{ after(grammarAccess.getPlan_termAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePred
entryRulePred 
:
{ before(grammarAccess.getPredRule()); }
	 rulePred
{ after(grammarAccess.getPredRule()); } 
	 EOF 
;

// Rule Pred
rulePred
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredAccess().getGroup()); }
(rule__Pred__Group__0)
{ after(grammarAccess.getPredAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerms
entryRuleTerms 
:
{ before(grammarAccess.getTermsRule()); }
	 ruleTerms
{ after(grammarAccess.getTermsRule()); } 
	 EOF 
;

// Rule Terms
ruleTerms
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermsAccess().getGroup()); }
(rule__Terms__Group__0)
{ after(grammarAccess.getTermsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getAlternatives()); }
(rule__Term__Alternatives)
{ after(grammarAccess.getTermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleList
entryRuleList 
:
{ before(grammarAccess.getListRule()); }
	 ruleList
{ after(grammarAccess.getListRule()); } 
	 EOF 
;

// Rule List
ruleList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListAccess().getGroup()); }
(rule__List__Group__0)
{ after(grammarAccess.getListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm_in_list
entryRuleTerm_in_list 
:
{ before(grammarAccess.getTerm_in_listRule()); }
	 ruleTerm_in_list
{ after(grammarAccess.getTerm_in_listRule()); } 
	 EOF 
;

// Rule Term_in_list
ruleTerm_in_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerm_in_listAccess().getAlternatives()); }
(rule__Term_in_list__Alternatives)
{ after(grammarAccess.getTerm_in_listAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLog_expr
entryRuleLog_expr 
:
{ before(grammarAccess.getLog_exprRule()); }
	 ruleLog_expr
{ after(grammarAccess.getLog_exprRule()); } 
	 EOF 
;

// Rule Log_expr
ruleLog_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLog_exprAccess().getGroup()); }
(rule__Log_expr__Group__0)
{ after(grammarAccess.getLog_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLog_expr_trm
entryRuleLog_expr_trm 
:
{ before(grammarAccess.getLog_expr_trmRule()); }
	 ruleLog_expr_trm
{ after(grammarAccess.getLog_expr_trmRule()); } 
	 EOF 
;

// Rule Log_expr_trm
ruleLog_expr_trm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLog_expr_trmAccess().getGroup()); }
(rule__Log_expr_trm__Group__0)
{ after(grammarAccess.getLog_expr_trmAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLog_expr_factor
entryRuleLog_expr_factor 
:
{ before(grammarAccess.getLog_expr_factorRule()); }
	 ruleLog_expr_factor
{ after(grammarAccess.getLog_expr_factorRule()); } 
	 EOF 
;

// Rule Log_expr_factor
ruleLog_expr_factor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLog_expr_factorAccess().getAlternatives()); }
(rule__Log_expr_factor__Alternatives)
{ after(grammarAccess.getLog_expr_factorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRel_expr
entryRuleRel_expr 
:
{ before(grammarAccess.getRel_exprRule()); }
	 ruleRel_expr
{ after(grammarAccess.getRel_exprRule()); } 
	 EOF 
;

// Rule Rel_expr
ruleRel_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_exprAccess().getGroup()); }
(rule__Rel_expr__Group__0)
{ after(grammarAccess.getRel_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_REL_OP
entryRuleTK_REL_OP 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getTK_REL_OPRule()); }
	 ruleTK_REL_OP
{ after(grammarAccess.getTK_REL_OPRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TK_REL_OP
ruleTK_REL_OP
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_REL_OPAccess().getAlternatives()); }
(rule__TK_REL_OP__Alternatives)
{ after(grammarAccess.getTK_REL_OPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleArithm_expr
entryRuleArithm_expr 
:
{ before(grammarAccess.getArithm_exprRule()); }
	 ruleArithm_expr
{ after(grammarAccess.getArithm_exprRule()); } 
	 EOF 
;

// Rule Arithm_expr
ruleArithm_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithm_exprAccess().getGroup()); }
(rule__Arithm_expr__Group__0)
{ after(grammarAccess.getArithm_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_SUB_ADD
entryRuleTK_SUB_ADD 
:
{ before(grammarAccess.getTK_SUB_ADDRule()); }
	 ruleTK_SUB_ADD
{ after(grammarAccess.getTK_SUB_ADDRule()); } 
	 EOF 
;

// Rule TK_SUB_ADD
ruleTK_SUB_ADD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_SUB_ADDAccess().getAlternatives()); }
(rule__TK_SUB_ADD__Alternatives)
{ after(grammarAccess.getTK_SUB_ADDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithm_expr_trm
entryRuleArithm_expr_trm 
:
{ before(grammarAccess.getArithm_expr_trmRule()); }
	 ruleArithm_expr_trm
{ after(grammarAccess.getArithm_expr_trmRule()); } 
	 EOF 
;

// Rule Arithm_expr_trm
ruleArithm_expr_trm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getGroup()); }
(rule__Arithm_expr_trm__Group__0)
{ after(grammarAccess.getArithm_expr_trmAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_MUL_DIV
entryRuleTK_MUL_DIV 
:
{ before(grammarAccess.getTK_MUL_DIVRule()); }
	 ruleTK_MUL_DIV
{ after(grammarAccess.getTK_MUL_DIVRule()); } 
	 EOF 
;

// Rule TK_MUL_DIV
ruleTK_MUL_DIV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_MUL_DIVAccess().getAlternatives()); }
(rule__TK_MUL_DIV__Alternatives)
{ after(grammarAccess.getTK_MUL_DIVAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithm_expr_factor
entryRuleArithm_expr_factor 
:
{ before(grammarAccess.getArithm_expr_factorRule()); }
	 ruleArithm_expr_factor
{ after(grammarAccess.getArithm_expr_factorRule()); } 
	 EOF 
;

// Rule Arithm_expr_factor
ruleArithm_expr_factor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getGroup()); }
(rule__Arithm_expr_factor__Group__0)
{ after(grammarAccess.getArithm_expr_factorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_EXPONENTIAL
entryRuleTK_EXPONENTIAL 
:
{ before(grammarAccess.getTK_EXPONENTIALRule()); }
	 ruleTK_EXPONENTIAL
{ after(grammarAccess.getTK_EXPONENTIALRule()); } 
	 EOF 
;

// Rule TK_EXPONENTIAL
ruleTK_EXPONENTIAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_EXPONENTIALAccess().getAsteriskAsteriskKeyword()); }

	'**' 

{ after(grammarAccess.getTK_EXPONENTIALAccess().getAsteriskAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithm_expr_simple
entryRuleArithm_expr_simple 
:
{ before(grammarAccess.getArithm_expr_simpleRule()); }
	 ruleArithm_expr_simple
{ after(grammarAccess.getArithm_expr_simpleRule()); } 
	 EOF 
;

// Rule Arithm_expr_simple
ruleArithm_expr_simple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getAlternatives()); }
(rule__Arithm_expr_simple__Alternatives)
{ after(grammarAccess.getArithm_expr_simpleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_UNARY_OP
entryRuleTK_UNARY_OP 
:
{ before(grammarAccess.getTK_UNARY_OPRule()); }
	 ruleTK_UNARY_OP
{ after(grammarAccess.getTK_UNARY_OPRule()); } 
	 EOF 
;

// Rule TK_UNARY_OP
ruleTK_UNARY_OP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_UNARY_OPAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getTK_UNARY_OPAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getLiteralAssignment()); }
(rule__Function__LiteralAssignment)
{ after(grammarAccess.getFunctionAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar
entryRuleVar 
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAccess().getGroup()); }
(rule__Var__Group__0)
{ after(grammarAccess.getVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleString
entryRuleString 
:
{ before(grammarAccess.getStringRule()); }
	 ruleString
{ after(grammarAccess.getStringRule()); } 
	 EOF 
;

// Rule String
ruleString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringAccess().getStringAssignment()); }
(rule__String__StringAssignment)
{ after(grammarAccess.getStringAccess().getStringAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJASON_ATOM
entryRuleJASON_ATOM 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getJASON_ATOMRule()); }
	 ruleJASON_ATOM
{ after(grammarAccess.getJASON_ATOMRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule JASON_ATOM
ruleJASON_ATOM
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJASON_ATOMAccess().getGroup()); }
(rule__JASON_ATOM__Group__0)
{ after(grammarAccess.getJASON_ATOMAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleJASON_ATOM_HEAD
entryRuleJASON_ATOM_HEAD 
:
{ before(grammarAccess.getJASON_ATOM_HEADRule()); }
	 ruleJASON_ATOM_HEAD
{ after(grammarAccess.getJASON_ATOM_HEADRule()); } 
	 EOF 
;

// Rule JASON_ATOM_HEAD
ruleJASON_ATOM_HEAD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJASON_ATOM_HEADAccess().getGroup()); }
(rule__JASON_ATOM_HEAD__Group__0)
{ after(grammarAccess.getJASON_ATOM_HEADAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJASON_ATOM_TAIL
entryRuleJASON_ATOM_TAIL 
:
{ before(grammarAccess.getJASON_ATOM_TAILRule()); }
	 ruleJASON_ATOM_TAIL
{ after(grammarAccess.getJASON_ATOM_TAILRule()); } 
	 EOF 
;

// Rule JASON_ATOM_TAIL
ruleJASON_ATOM_TAIL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJASON_ATOM_TAILAccess().getGroup()); }
(rule__JASON_ATOM_TAIL__Group__0)
{ after(grammarAccess.getJASON_ATOM_TAILAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_BEGIN
entryRuleTK_BEGIN 
:
{ before(grammarAccess.getTK_BEGINRule()); }
	 ruleTK_BEGIN
{ after(grammarAccess.getTK_BEGINRule()); } 
	 EOF 
;

// Rule TK_BEGIN
ruleTK_BEGIN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_BEGINAccess().getBeginKeyword()); }

	'begin' 

{ after(grammarAccess.getTK_BEGINAccess().getBeginKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_END
entryRuleTK_END 
:
{ before(grammarAccess.getTK_ENDRule()); }
	 ruleTK_END
{ after(grammarAccess.getTK_ENDRule()); } 
	 EOF 
;

// Rule TK_END
ruleTK_END
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_ENDAccess().getEndKeyword()); }

	'end' 

{ after(grammarAccess.getTK_ENDAccess().getEndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_IF
entryRuleTK_IF 
:
{ before(grammarAccess.getTK_IFRule()); }
	 ruleTK_IF
{ after(grammarAccess.getTK_IFRule()); } 
	 EOF 
;

// Rule TK_IF
ruleTK_IF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_IFAccess().getIfKeyword()); }

	'if' 

{ after(grammarAccess.getTK_IFAccess().getIfKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_ELSE
entryRuleTK_ELSE 
:
{ before(grammarAccess.getTK_ELSERule()); }
	 ruleTK_ELSE
{ after(grammarAccess.getTK_ELSERule()); } 
	 EOF 
;

// Rule TK_ELSE
ruleTK_ELSE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_ELSEAccess().getElseKeyword()); }

	'else' 

{ after(grammarAccess.getTK_ELSEAccess().getElseKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_FOR
entryRuleTK_FOR 
:
{ before(grammarAccess.getTK_FORRule()); }
	 ruleTK_FOR
{ after(grammarAccess.getTK_FORRule()); } 
	 EOF 
;

// Rule TK_FOR
ruleTK_FOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_FORAccess().getForKeyword()); }

	'for' 

{ after(grammarAccess.getTK_FORAccess().getForKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_WHILE
entryRuleTK_WHILE 
:
{ before(grammarAccess.getTK_WHILERule()); }
	 ruleTK_WHILE
{ after(grammarAccess.getTK_WHILERule()); } 
	 EOF 
;

// Rule TK_WHILE
ruleTK_WHILE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_WHILEAccess().getWhileKeyword()); }

	'while' 

{ after(grammarAccess.getTK_WHILEAccess().getWhileKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_NOT
entryRuleTK_NOT 
:
{ before(grammarAccess.getTK_NOTRule()); }
	 ruleTK_NOT
{ after(grammarAccess.getTK_NOTRule()); } 
	 EOF 
;

// Rule TK_NOT
ruleTK_NOT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_NOTAccess().getNotKeyword()); }

	'not' 

{ after(grammarAccess.getTK_NOTAccess().getNotKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_INTDIV
entryRuleTK_INTDIV 
:
{ before(grammarAccess.getTK_INTDIVRule()); }
	 ruleTK_INTDIV
{ after(grammarAccess.getTK_INTDIVRule()); } 
	 EOF 
;

// Rule TK_INTDIV
ruleTK_INTDIV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_INTDIVAccess().getDivKeyword()); }

	'div' 

{ after(grammarAccess.getTK_INTDIVAccess().getDivKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_INTMOD
entryRuleTK_INTMOD 
:
{ before(grammarAccess.getTK_INTMODRule()); }
	 ruleTK_INTMOD
{ after(grammarAccess.getTK_INTMODRule()); } 
	 EOF 
;

// Rule TK_INTMOD
ruleTK_INTMOD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_INTMODAccess().getModKeyword()); }

	'mod' 

{ after(grammarAccess.getTK_INTMODAccess().getModKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_TRUE
entryRuleTK_TRUE 
:
{ before(grammarAccess.getTK_TRUERule()); }
	 ruleTK_TRUE
{ after(grammarAccess.getTK_TRUERule()); } 
	 EOF 
;

// Rule TK_TRUE
ruleTK_TRUE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_TRUEAccess().getTrueKeyword()); }

	'true' 

{ after(grammarAccess.getTK_TRUEAccess().getTrueKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_FALSE
entryRuleTK_FALSE 
:
{ before(grammarAccess.getTK_FALSERule()); }
	 ruleTK_FALSE
{ after(grammarAccess.getTK_FALSERule()); } 
	 EOF 
;

// Rule TK_FALSE
ruleTK_FALSE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_FALSEAccess().getFalseKeyword()); }

	'false' 

{ after(grammarAccess.getTK_FALSEAccess().getFalseKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Directive__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getGroup_1_0()); }
(rule__Directive__Group_1_0__0)
{ after(grammarAccess.getDirectiveAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getDirectiveAccess().getGroup_1_1()); }
(rule__Directive__Group_1_1__0)
{ after(grammarAccess.getDirectiveAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getLiteralAssignment_1_0()); }
(rule__Trigger__LiteralAssignment_1_0)
{ after(grammarAccess.getTriggerAccess().getLiteralAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getVarAssignment_1_1()); }
(rule__Trigger__VarAssignment_1_1)
{ after(grammarAccess.getTriggerAccess().getVarAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerSymbol__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerSymbolAccess().getPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getTriggerSymbolAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTriggerSymbolAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getTriggerSymbolAccess().getHyphenMinusKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getTriggerSymbolAccess().getCircumflexAccentKeyword_0_2()); }

	'^' 

{ after(grammarAccess.getTriggerSymbolAccess().getCircumflexAccentKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerSymbol__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerSymbolAccess().getExclamationMarkKeyword_1_0()); }

	'!' 

{ after(grammarAccess.getTriggerSymbolAccess().getExclamationMarkKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getTriggerSymbolAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getTriggerSymbolAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getStmtIFAssignment_0_0()); }
(rule__Plan_body_factor__StmtIFAssignment_0_0)
{ after(grammarAccess.getPlan_body_factorAccess().getStmtIFAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getPlan_body_factorAccess().getStmtFORAssignment_0_1()); }
(rule__Plan_body_factor__StmtFORAssignment_0_1)
{ after(grammarAccess.getPlan_body_factorAccess().getStmtFORAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getPlan_body_factorAccess().getStmtWHILEAssignment_0_2()); }
(rule__Plan_body_factor__StmtWHILEAssignment_0_2)
{ after(grammarAccess.getPlan_body_factorAccess().getStmtWHILEAssignment_0_2()); }
)

    |(
{ before(grammarAccess.getPlan_body_factorAccess().getBody_formulaAssignment_0_3()); }
(rule__Plan_body_factor__Body_formulaAssignment_0_3)
{ after(grammarAccess.getPlan_body_factorAccess().getBody_formulaAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getBody_formulaAccess().getExclamationMarkKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getExclamationMarkExclamationMarkKeyword_0_1()); }

	'!!' 

{ after(grammarAccess.getBody_formulaAccess().getExclamationMarkExclamationMarkKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getQuestionMarkKeyword_0_2()); }

	'?' 

{ after(grammarAccess.getBody_formulaAccess().getQuestionMarkKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getGroup_0_3()); }
(rule__Body_formula__Group_0_3__0)
{ after(grammarAccess.getBody_formulaAccess().getGroup_0_3()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getGroup_0_4()); }
(rule__Body_formula__Group_0_4__0)
{ after(grammarAccess.getBody_formulaAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Alternatives_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getPlusSignKeyword_0_3_1_0()); }

	'+' 

{ after(grammarAccess.getBody_formulaAccess().getPlusSignKeyword_0_3_1_0()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getGreaterThanSignKeyword_0_3_1_1()); }

	'>' 

{ after(grammarAccess.getBody_formulaAccess().getGreaterThanSignKeyword_0_3_1_1()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getLessThanSignKeyword_0_3_1_2()); }

	'<' 

{ after(grammarAccess.getBody_formulaAccess().getLessThanSignKeyword_0_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getPlan_termAssignment_1_0()); }
(rule__Body_formula__Plan_termAssignment_1_0)
{ after(grammarAccess.getBody_formulaAccess().getPlan_termAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBody_formulaAccess().getLog_exprAssignment_1_1()); }
(rule__Body_formula__Log_exprAssignment_1_1)
{ after(grammarAccess.getBody_formulaAccess().getLog_exprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Alternatives_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLessThanSignHyphenMinusKeyword_2_3_0()); }

	'<-' 

{ after(grammarAccess.getPlan_termAccess().getLessThanSignHyphenMinusKeyword_2_3_0()); }
)

    |(
{ before(grammarAccess.getPlan_termAccess().getSemicolonKeyword_2_3_1()); }

	';' 

{ after(grammarAccess.getPlan_termAccess().getSemicolonKeyword_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
(rule__Literal__Group_0__0)
{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getTk_trueAssignment_1()); }
(rule__Literal__Tk_trueAssignment_1)
{ after(grammarAccess.getLiteralAccess().getTk_trueAssignment_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getTk_falseAssignment_2()); }
(rule__Literal__Tk_falseAssignment_2)
{ after(grammarAccess.getLiteralAccess().getTk_falseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getAtomAssignment_0_0_0_0()); }
(rule__Literal__AtomAssignment_0_0_0_0)
{ after(grammarAccess.getLiteralAccess().getAtomAssignment_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getVarAssignment_0_0_0_1()); }
(rule__Literal__VarAssignment_0_0_0_1)
{ after(grammarAccess.getLiteralAccess().getVarAssignment_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getPredAssignment_0_2_0()); }
(rule__Literal__PredAssignment_0_2_0)
{ after(grammarAccess.getLiteralAccess().getPredAssignment_0_2_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getVar2Assignment_0_2_1()); }
(rule__Literal__Var2Assignment_0_2_1)
{ after(grammarAccess.getLiteralAccess().getVar2Assignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getAtomAssignment_0_0()); }
(rule__Pred__AtomAssignment_0_0)
{ after(grammarAccess.getPredAccess().getAtomAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getPredAccess().getTk_beginAssignment_0_1()); }
(rule__Pred__Tk_beginAssignment_0_1)
{ after(grammarAccess.getPredAccess().getTk_beginAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getPredAccess().getTk_endAssignment_0_2()); }
(rule__Pred__Tk_endAssignment_0_2)
{ after(grammarAccess.getPredAccess().getTk_endAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getListAssignment_0()); }
(rule__Term__ListAssignment_0)
{ after(grammarAccess.getTermAccess().getListAssignment_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getPlan_termAssignment_1()); }
(rule__Term__Plan_termAssignment_1)
{ after(grammarAccess.getTermAccess().getPlan_termAssignment_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getLog_exprAssignment_2()); }
(rule__Term__Log_exprAssignment_2)
{ after(grammarAccess.getTermAccess().getLog_exprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__Alternatives_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getVarAssignment_2_2_1_0()); }
(rule__List__VarAssignment_2_2_1_0)
{ after(grammarAccess.getListAccess().getVarAssignment_2_2_1_0()); }
)

    |(
{ before(grammarAccess.getListAccess().getUnnamedvarAssignment_2_2_1_1()); }
(rule__List__UnnamedvarAssignment_2_2_1_1)
{ after(grammarAccess.getListAccess().getUnnamedvarAssignment_2_2_1_1()); }
)

    |(
{ before(grammarAccess.getListAccess().getListAssignment_2_2_1_2()); }
(rule__List__ListAssignment_2_2_1_2)
{ after(grammarAccess.getListAccess().getListAssignment_2_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term_in_list__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerm_in_listAccess().getListAssignment_0()); }
(rule__Term_in_list__ListAssignment_0)
{ after(grammarAccess.getTerm_in_listAccess().getListAssignment_0()); }
)

    |(
{ before(grammarAccess.getTerm_in_listAccess().getArithm_exprAssignment_1()); }
(rule__Term_in_list__Arithm_exprAssignment_1)
{ after(grammarAccess.getTerm_in_listAccess().getArithm_exprAssignment_1()); }
)

    |(
{ before(grammarAccess.getTerm_in_listAccess().getStringAssignment_2()); }
(rule__Term_in_list__StringAssignment_2)
{ after(grammarAccess.getTerm_in_listAccess().getStringAssignment_2()); }
)

    |(
{ before(grammarAccess.getTerm_in_listAccess().getPlan_termAssignment_3()); }
(rule__Term_in_list__Plan_termAssignment_3)
{ after(grammarAccess.getTerm_in_listAccess().getPlan_termAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_factor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_factorAccess().getGroup_0()); }
(rule__Log_expr_factor__Group_0__0)
{ after(grammarAccess.getLog_expr_factorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLog_expr_factorAccess().getRel_exprAssignment_1()); }
(rule__Log_expr_factor__Rel_exprAssignment_1)
{ after(grammarAccess.getLog_expr_factorAccess().getRel_exprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getArithm_expAssignment_0_0()); }
(rule__Rel_expr__Arithm_expAssignment_0_0)
{ after(grammarAccess.getRel_exprAccess().getArithm_expAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getRel_exprAccess().getStringAssignment_0_1()); }
(rule__Rel_expr__StringAssignment_0_1)
{ after(grammarAccess.getRel_exprAccess().getStringAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getArithm_exprAssignment_1_1_0()); }
(rule__Rel_expr__Arithm_exprAssignment_1_1_0)
{ after(grammarAccess.getRel_exprAccess().getArithm_exprAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getRel_exprAccess().getString2Assignment_1_1_1()); }
(rule__Rel_expr__String2Assignment_1_1_1)
{ after(grammarAccess.getRel_exprAccess().getString2Assignment_1_1_1()); }
)

    |(
{ before(grammarAccess.getRel_exprAccess().getListAssignment_1_1_2()); }
(rule__Rel_expr__ListAssignment_1_1_2)
{ after(grammarAccess.getRel_exprAccess().getListAssignment_1_1_2()); }
)

    |(
{ before(grammarAccess.getRel_exprAccess().getPlan_termAssignment_1_1_3()); }
(rule__Rel_expr__Plan_termAssignment_1_1_3)
{ after(grammarAccess.getRel_exprAccess().getPlan_termAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TK_REL_OP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_REL_OPAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTK_REL_OPAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getTK_REL_OPAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getTK_REL_OPAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getTK_REL_OPAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getTK_REL_OPAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getTK_REL_OPAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	'>=' 

{ after(grammarAccess.getTK_REL_OPAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getTK_REL_OPAccess().getEqualsSignEqualsSignKeyword_4()); }

	'==' 

{ after(grammarAccess.getTK_REL_OPAccess().getEqualsSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getTK_REL_OPAccess().getReverseSolidusEqualsSignEqualsSignKeyword_5()); }

	'\\==' 

{ after(grammarAccess.getTK_REL_OPAccess().getReverseSolidusEqualsSignEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getTK_REL_OPAccess().getGroup_6()); }
(rule__TK_REL_OP__Group_6__0)
{ after(grammarAccess.getTK_REL_OPAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TK_SUB_ADD__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_SUB_ADDAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getTK_SUB_ADDAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getTK_SUB_ADDAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getTK_SUB_ADDAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getMuldivAssignment_1_0_0()); }
(rule__Arithm_expr_trm__MuldivAssignment_1_0_0)
{ after(grammarAccess.getArithm_expr_trmAccess().getMuldivAssignment_1_0_0()); }
)

    |(
{ before(grammarAccess.getArithm_expr_trmAccess().getTk_intdivAssignment_1_0_1()); }
(rule__Arithm_expr_trm__Tk_intdivAssignment_1_0_1)
{ after(grammarAccess.getArithm_expr_trmAccess().getTk_intdivAssignment_1_0_1()); }
)

    |(
{ before(grammarAccess.getArithm_expr_trmAccess().getTk_intmodAssignment_1_0_2()); }
(rule__Arithm_expr_trm__Tk_intmodAssignment_1_0_2)
{ after(grammarAccess.getArithm_expr_trmAccess().getTk_intmodAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TK_MUL_DIV__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_MUL_DIVAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getTK_MUL_DIVAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getTK_MUL_DIVAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getTK_MUL_DIVAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getNumberAssignment_0()); }
(rule__Arithm_expr_simple__NumberAssignment_0)
{ after(grammarAccess.getArithm_expr_simpleAccess().getNumberAssignment_0()); }
)

    |(
{ before(grammarAccess.getArithm_expr_simpleAccess().getGroup_1()); }
(rule__Arithm_expr_simple__Group_1__0)
{ after(grammarAccess.getArithm_expr_simpleAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getArithm_expr_simpleAccess().getGroup_2()); }
(rule__Arithm_expr_simple__Group_2__0)
{ after(grammarAccess.getArithm_expr_simpleAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getArithm_expr_simpleAccess().getFunctionAssignment_3()); }
(rule__Arithm_expr_simple__FunctionAssignment_3)
{ after(grammarAccess.getArithm_expr_simpleAccess().getFunctionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getVarAssignment_0_0()); }
(rule__Var__VarAssignment_0_0)
{ after(grammarAccess.getVarAccess().getVarAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getVarAccess().getUnnamedvarAssignment_0_1()); }
(rule__Var__UnnamedvarAssignment_0_1)
{ after(grammarAccess.getVarAccess().getUnnamedvarAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_0()); }
(rule__Number__Group_0__0)
{ after(grammarAccess.getNumberAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

    |(
(
{ before(grammarAccess.getNumberAccess().getNumberAssignment_2()); }
(rule__Number__NumberAssignment_2)
{ after(grammarAccess.getNumberAccess().getNumberAssignment_2()); }
)
(
{ before(grammarAccess.getNumberAccess().getNumberAssignment_2()); }
(rule__Number__NumberAssignment_2)*
{ after(grammarAccess.getNumberAccess().getNumberAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Agent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__0__Impl
	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveAssignment_0()); }
(rule__Agent__DirectiveAssignment_0)*
{ after(grammarAccess.getAgentAccess().getDirectiveAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__1__Impl
	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getGroup_1()); }
(rule__Agent__Group_1__0)*
{ after(grammarAccess.getAgentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__2__Impl
	rule__Agent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getGroup_2()); }
(rule__Agent__Group_2__0)*
{ after(grammarAccess.getAgentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getGroup_3()); }
(rule__Agent__Group_3__0)*
{ after(grammarAccess.getAgentAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Agent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_1__0__Impl
	rule__Agent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getBeliefAssignment_1_0()); }
(rule__Agent__BeliefAssignment_1_0)
{ after(grammarAccess.getAgentAccess().getBeliefAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveAssignment_1_1()); }
(rule__Agent__DirectiveAssignment_1_1)*
{ after(grammarAccess.getAgentAccess().getDirectiveAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Agent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_2__0__Impl
	rule__Agent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getInitial_goalAssignment_2_0()); }
(rule__Agent__Initial_goalAssignment_2_0)
{ after(grammarAccess.getAgentAccess().getInitial_goalAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveAssignment_2_1()); }
(rule__Agent__DirectiveAssignment_2_1)*
{ after(grammarAccess.getAgentAccess().getDirectiveAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Agent__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_3__0__Impl
	rule__Agent__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getPlanAssignment_3_0()); }
(rule__Agent__PlanAssignment_3_0)
{ after(grammarAccess.getAgentAccess().getPlanAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_3__1__Impl
	rule__Agent__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getBeliefAssignment_3_1()); }
(rule__Agent__BeliefAssignment_3_1)*
{ after(grammarAccess.getAgentAccess().getBeliefAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Agent__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveAssignment_3_2()); }
(rule__Agent__DirectiveAssignment_3_2)*
{ after(grammarAccess.getAgentAccess().getDirectiveAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Directive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group__0__Impl
	rule__Directive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getDirectiveAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getAlternatives_1()); }
(rule__Directive__Alternatives_1)
{ after(grammarAccess.getDirectiveAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Directive__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_1_0__0__Impl
	rule__Directive__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getTk_beginAssignment_1_0_0()); }
(rule__Directive__Tk_beginAssignment_1_0_0)
{ after(grammarAccess.getDirectiveAccess().getTk_beginAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_1_0__1__Impl
	rule__Directive__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getPredAssignment_1_0_1()); }
(rule__Directive__PredAssignment_1_0_1)
{ after(grammarAccess.getDirectiveAccess().getPredAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_1_0__2__Impl
	rule__Directive__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getRightCurlyBracketKeyword_1_0_2()); }

	'}' 

{ after(grammarAccess.getDirectiveAccess().getRightCurlyBracketKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getAgentAssignment_1_0_3()); }
(rule__Directive__AgentAssignment_1_0_3)
{ after(grammarAccess.getDirectiveAccess().getAgentAssignment_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Directive__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_1_1__0__Impl
	rule__Directive__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getPred2Assignment_1_1_0()); }
(rule__Directive__Pred2Assignment_1_1_0)
{ after(grammarAccess.getDirectiveAccess().getPred2Assignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getRightCurlyBracketKeyword_1_1_1()); }

	'}' 

{ after(grammarAccess.getDirectiveAccess().getRightCurlyBracketKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Belief__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Belief__Group__0__Impl
	rule__Belief__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getLiteralAssignment_0()); }
(rule__Belief__LiteralAssignment_0)
{ after(grammarAccess.getBeliefAccess().getLiteralAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Belief__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Belief__Group__1__Impl
	rule__Belief__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getGroup_1()); }
(rule__Belief__Group_1__0)?
{ after(grammarAccess.getBeliefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Belief__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Belief__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getBeliefAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Belief__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Belief__Group_1__0__Impl
	rule__Belief__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getColonHyphenMinusKeyword_1_0()); }

	':-' 

{ after(grammarAccess.getBeliefAccess().getColonHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Belief__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Belief__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getLog_exprAssignment_1_1()); }
(rule__Belief__Log_exprAssignment_1_1)
{ after(grammarAccess.getBeliefAccess().getLog_exprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Initial_goal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_goal__Group__0__Impl
	rule__Initial_goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_goal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_goalAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getInitial_goalAccess().getExclamationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initial_goal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_goal__Group__1__Impl
	rule__Initial_goal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_goal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_goalAccess().getLiteralAssignment_1()); }
(rule__Initial_goal__LiteralAssignment_1)
{ after(grammarAccess.getInitial_goalAccess().getLiteralAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initial_goal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_goal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_goal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_goalAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getInitial_goalAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Plan__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__0__Impl
	rule__Plan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getGroup_0()); }
(rule__Plan__Group_0__0)?
{ after(grammarAccess.getPlanAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__1__Impl
	rule__Plan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getTriggerAssignment_1()); }
(rule__Plan__TriggerAssignment_1)
{ after(grammarAccess.getPlanAccess().getTriggerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__2__Impl
	rule__Plan__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getGroup_2()); }
(rule__Plan__Group_2__0)?
{ after(grammarAccess.getPlanAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__3__Impl
	rule__Plan__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getGroup_3()); }
(rule__Plan__Group_3__0)?
{ after(grammarAccess.getPlanAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getFullStopKeyword_4()); }

	'.' 

{ after(grammarAccess.getPlanAccess().getFullStopKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Plan__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group_0__0__Impl
	rule__Plan__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getTk_label_atAssignment_0_0()); }
(rule__Plan__Tk_label_atAssignment_0_0)
{ after(grammarAccess.getPlanAccess().getTk_label_atAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getPredAssignment_0_1()); }
(rule__Plan__PredAssignment_0_1)
{ after(grammarAccess.getPlanAccess().getPredAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group_2__0__Impl
	rule__Plan__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getPlanAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getLog_exprAssignment_2_1()); }
(rule__Plan__Log_exprAssignment_2_1)
{ after(grammarAccess.getPlanAccess().getLog_exprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group_3__0__Impl
	rule__Plan__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getLessThanSignHyphenMinusKeyword_3_0()); }

	'<-' 

{ after(grammarAccess.getPlanAccess().getLessThanSignHyphenMinusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getPlan_bodyAssignment_3_1()); }
(rule__Plan__Plan_bodyAssignment_3_1)
{ after(grammarAccess.getPlanAccess().getPlan_bodyAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trigger__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerAssignment_0()); }
(rule__Trigger__TriggerAssignment_0)
{ after(grammarAccess.getTriggerAccess().getTriggerAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getAlternatives_1()); }
(rule__Trigger__Alternatives_1)
{ after(grammarAccess.getTriggerAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TriggerSymbol__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerSymbol__Group__0__Impl
	rule__TriggerSymbol__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerSymbol__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerSymbolAccess().getAlternatives_0()); }
(rule__TriggerSymbol__Alternatives_0)
{ after(grammarAccess.getTriggerSymbolAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerSymbol__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerSymbol__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerSymbol__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerSymbolAccess().getAlternatives_1()); }
(rule__TriggerSymbol__Alternatives_1)?
{ after(grammarAccess.getTriggerSymbolAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body__Group__0__Impl
	rule__Plan_body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_bodyAccess().getPlan_body_termAssignment_0()); }
(rule__Plan_body__Plan_body_termAssignment_0)
{ after(grammarAccess.getPlan_bodyAccess().getPlan_body_termAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body__Group__1__Impl
	rule__Plan_body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_bodyAccess().getSemicolonKeyword_1()); }
(
	';' 
)?
{ after(grammarAccess.getPlan_bodyAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_bodyAccess().getPlan_bodyAssignment_2()); }
(rule__Plan_body__Plan_bodyAssignment_2)?
{ after(grammarAccess.getPlan_bodyAccess().getPlan_bodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Plan_body_term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_term__Group__0__Impl
	rule__Plan_body_term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_termAccess().getPlan_body_factorAssignment_0()); }
(rule__Plan_body_term__Plan_body_factorAssignment_0)
{ after(grammarAccess.getPlan_body_termAccess().getPlan_body_factorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_body_term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_termAccess().getGroup_1()); }
(rule__Plan_body_term__Group_1__0)?
{ after(grammarAccess.getPlan_body_termAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_body_term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_term__Group_1__0__Impl
	rule__Plan_body_term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_termAccess().getVerticalLineVerticalLineVerticalLineKeyword_1_0()); }

	'|||' 

{ after(grammarAccess.getPlan_body_termAccess().getVerticalLineVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_body_term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_termAccess().getPlan_body_termAssignment_1_1()); }
(rule__Plan_body_term__Plan_body_termAssignment_1_1)
{ after(grammarAccess.getPlan_body_termAccess().getPlan_body_termAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_body_factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_factor__Group__0__Impl
	rule__Plan_body_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getAlternatives_0()); }
(rule__Plan_body_factor__Alternatives_0)
{ after(grammarAccess.getPlan_body_factorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_body_factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getGroup_1()); }
(rule__Plan_body_factor__Group_1__0)?
{ after(grammarAccess.getPlan_body_factorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_body_factor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_factor__Group_1__0__Impl
	rule__Plan_body_factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getVerticalLineAmpersandVerticalLineKeyword_1_0()); }

	'|&|' 

{ after(grammarAccess.getPlan_body_factorAccess().getVerticalLineAmpersandVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_body_factor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_body_factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getPlan_body_factorAssignment_1_1()); }
(rule__Plan_body_factor__Plan_body_factorAssignment_1_1)
{ after(grammarAccess.getPlan_body_factorAccess().getPlan_body_factorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StmtIF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group__0__Impl
	rule__StmtIF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getTk_ifAssignment_0()); }
(rule__StmtIF__Tk_ifAssignment_0)
{ after(grammarAccess.getStmtIFAccess().getTk_ifAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group__1__Impl
	rule__StmtIF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getStmtIFAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group__2__Impl
	rule__StmtIF__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getLog_exprAssignment_2()); }
(rule__StmtIF__Log_exprAssignment_2)
{ after(grammarAccess.getStmtIFAccess().getLog_exprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIF__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group__3__Impl
	rule__StmtIF__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStmtIFAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIF__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group__4__Impl
	rule__StmtIF__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getPlan_termAssignment_4()); }
(rule__StmtIF__Plan_termAssignment_4)
{ after(grammarAccess.getStmtIFAccess().getPlan_termAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIF__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getGroup_5()); }
(rule__StmtIF__Group_5__0)?
{ after(grammarAccess.getStmtIFAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StmtIF__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group_5__0__Impl
	rule__StmtIF__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getTk_elseAssignment_5_0()); }
(rule__StmtIF__Tk_elseAssignment_5_0)?
{ after(grammarAccess.getStmtIFAccess().getTk_elseAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIF__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIF__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getPlan_term2Assignment_5_1()); }
(rule__StmtIF__Plan_term2Assignment_5_1)
{ after(grammarAccess.getStmtIFAccess().getPlan_term2Assignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StmtFOR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtFOR__Group__0__Impl
	rule__StmtFOR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getTk_forAssignment_0()); }
(rule__StmtFOR__Tk_forAssignment_0)
{ after(grammarAccess.getStmtFORAccess().getTk_forAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtFOR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtFOR__Group__1__Impl
	rule__StmtFOR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getStmtFORAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtFOR__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtFOR__Group__2__Impl
	rule__StmtFOR__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getLog_exprAssignment_2()); }
(rule__StmtFOR__Log_exprAssignment_2)
{ after(grammarAccess.getStmtFORAccess().getLog_exprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtFOR__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtFOR__Group__3__Impl
	rule__StmtFOR__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStmtFORAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtFOR__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtFOR__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getPlan_termAssignment_4()); }
(rule__StmtFOR__Plan_termAssignment_4)
{ after(grammarAccess.getStmtFORAccess().getPlan_termAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StmtWHILE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWHILE__Group__0__Impl
	rule__StmtWHILE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getTk_whileAssignment_0()); }
(rule__StmtWHILE__Tk_whileAssignment_0)
{ after(grammarAccess.getStmtWHILEAccess().getTk_whileAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWHILE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWHILE__Group__1__Impl
	rule__StmtWHILE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getStmtWHILEAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWHILE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWHILE__Group__2__Impl
	rule__StmtWHILE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getLog_exprAssignment_2()); }
(rule__StmtWHILE__Log_exprAssignment_2)
{ after(grammarAccess.getStmtWHILEAccess().getLog_exprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWHILE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWHILE__Group__3__Impl
	rule__StmtWHILE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStmtWHILEAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWHILE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWHILE__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getPlan_termAssignment_4()); }
(rule__StmtWHILE__Plan_termAssignment_4)
{ after(grammarAccess.getStmtWHILEAccess().getPlan_termAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Body_formula__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body_formula__Group__0__Impl
	rule__Body_formula__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getAlternatives_0()); }
(rule__Body_formula__Alternatives_0)?
{ after(grammarAccess.getBody_formulaAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body_formula__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body_formula__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getAlternatives_1()); }
(rule__Body_formula__Alternatives_1)
{ after(grammarAccess.getBody_formulaAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Body_formula__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body_formula__Group_0_3__0__Impl
	rule__Body_formula__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getPlusSignKeyword_0_3_0()); }

	'+' 

{ after(grammarAccess.getBody_formulaAccess().getPlusSignKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body_formula__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body_formula__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getAlternatives_0_3_1()); }
(rule__Body_formula__Alternatives_0_3_1)?
{ after(grammarAccess.getBody_formulaAccess().getAlternatives_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Body_formula__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body_formula__Group_0_4__0__Impl
	rule__Body_formula__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getHyphenMinusKeyword_0_4_0()); }

	'-' 

{ after(grammarAccess.getBody_formulaAccess().getHyphenMinusKeyword_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body_formula__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body_formula__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getPlusSignKeyword_0_4_1()); }
(
	'+' 
)?
{ after(grammarAccess.getBody_formulaAccess().getPlusSignKeyword_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group__0__Impl
	rule__Plan_term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getPlan_termAction_0()); }
(

)
{ after(grammarAccess.getPlan_termAccess().getPlan_termAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group__1__Impl
	rule__Plan_term__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getPlan_termAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group__2__Impl
	rule__Plan_term__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getGroup_2()); }
(rule__Plan_term__Group_2__0)?
{ after(grammarAccess.getPlan_termAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group__3__Impl
	rule__Plan_term__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getGroup_3()); }
(rule__Plan_term__Group_3__0)?
{ after(grammarAccess.getPlan_termAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group__4__Impl
	rule__Plan_term__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getPlan_bodyAssignment_4()); }
(rule__Plan_term__Plan_bodyAssignment_4)?
{ after(grammarAccess.getPlan_termAccess().getPlan_bodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPlan_termAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Plan_term__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2__0__Impl
	rule__Plan_term__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getGroup_2_0()); }
(rule__Plan_term__Group_2_0__0)?
{ after(grammarAccess.getPlan_termAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2__1__Impl
	rule__Plan_term__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getTriggerAssignment_2_1()); }
(rule__Plan_term__TriggerAssignment_2_1)
{ after(grammarAccess.getPlan_termAccess().getTriggerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2__2__Impl
	rule__Plan_term__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getGroup_2_2()); }
(rule__Plan_term__Group_2_2__0)?
{ after(grammarAccess.getPlan_termAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getAlternatives_2_3()); }
(rule__Plan_term__Alternatives_2_3)?
{ after(grammarAccess.getPlan_termAccess().getAlternatives_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Plan_term__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2_0__0__Impl
	rule__Plan_term__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getTk_label_atAssignment_2_0_0()); }
(rule__Plan_term__Tk_label_atAssignment_2_0_0)
{ after(grammarAccess.getPlan_termAccess().getTk_label_atAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getPredAssignment_2_0_1()); }
(rule__Plan_term__PredAssignment_2_0_1)
{ after(grammarAccess.getPlan_termAccess().getPredAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_term__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2_2__0__Impl
	rule__Plan_term__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getColonKeyword_2_2_0()); }

	':' 

{ after(grammarAccess.getPlan_termAccess().getColonKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLog_exprAssignment_2_2_1()); }
(rule__Plan_term__Log_exprAssignment_2_2_1)
{ after(grammarAccess.getPlan_termAccess().getLog_exprAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Plan_term__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_3__0__Impl
	rule__Plan_term__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLiteralAssignment_3_0()); }
(rule__Plan_term__LiteralAssignment_3_0)
{ after(grammarAccess.getPlan_termAccess().getLiteralAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_3__1__Impl
	rule__Plan_term__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getColonHyphenMinusKeyword_3_1()); }

	':-' 

{ after(grammarAccess.getPlan_termAccess().getColonHyphenMinusKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Plan_term__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Plan_term__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLog_expr2Assignment_3_2()); }
(rule__Plan_term__Log_expr2Assignment_3_2)
{ after(grammarAccess.getPlan_termAccess().getLog_expr2Assignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Literal__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_0_0()); }
(rule__Literal__Group_0_0__0)?
{ after(grammarAccess.getLiteralAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__1__Impl
	rule__Literal__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getTk_negAssignment_0_1()); }
(rule__Literal__Tk_negAssignment_0_1)?
{ after(grammarAccess.getLiteralAccess().getTk_negAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives_0_2()); }
(rule__Literal__Alternatives_0_2)
{ after(grammarAccess.getLiteralAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Literal__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0_0__0__Impl
	rule__Literal__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives_0_0_0()); }
(rule__Literal__Alternatives_0_0_0)?
{ after(grammarAccess.getLiteralAccess().getAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getColonColonKeyword_0_0_1()); }

	'::' 

{ after(grammarAccess.getLiteralAccess().getColonColonKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pred__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group__0__Impl
	rule__Pred__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getAlternatives_0()); }
(rule__Pred__Alternatives_0)
{ after(grammarAccess.getPredAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group__1__Impl
	rule__Pred__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getGroup_1()); }
(rule__Pred__Group_1__0)?
{ after(grammarAccess.getPredAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group__2__Impl
	rule__Pred__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getPlan_termAssignment_2()); }
(rule__Pred__Plan_termAssignment_2)*
{ after(grammarAccess.getPredAccess().getPlan_termAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getListAssignment_3()); }
(rule__Pred__ListAssignment_3)?
{ after(grammarAccess.getPredAccess().getListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pred__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group_1__0__Impl
	rule__Pred__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getPredAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group_1__1__Impl
	rule__Pred__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getTermsAssignment_1_1()); }
(rule__Pred__TermsAssignment_1_1)
{ after(grammarAccess.getPredAccess().getTermsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pred__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pred__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getPredAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Terms__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terms__Group__0__Impl
	rule__Terms__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Terms__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermsAccess().getTermAssignment_0()); }
(rule__Terms__TermAssignment_0)
{ after(grammarAccess.getTermsAccess().getTermAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Terms__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terms__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Terms__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermsAccess().getGroup_1()); }
(rule__Terms__Group_1__0)*
{ after(grammarAccess.getTermsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Terms__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terms__Group_1__0__Impl
	rule__Terms__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Terms__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTermsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Terms__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terms__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Terms__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermsAccess().getTermAssignment_1_1()); }
(rule__Terms__TermAssignment_1_1)
{ after(grammarAccess.getTermsAccess().getTermAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__List__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__0__Impl
	rule__List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getListAction_0()); }
(

)
{ after(grammarAccess.getListAccess().getListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__1__Impl
	rule__List__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getListAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__2__Impl
	rule__List__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getGroup_2()); }
(rule__List__Group_2__0)?
{ after(grammarAccess.getListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getListAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__List__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2__0__Impl
	rule__List__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getTerm_in_listAssignment_2_0()); }
(rule__List__Term_in_listAssignment_2_0)
{ after(grammarAccess.getListAccess().getTerm_in_listAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2__1__Impl
	rule__List__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getGroup_2_1()); }
(rule__List__Group_2_1__0)*
{ after(grammarAccess.getListAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getGroup_2_2()); }
(rule__List__Group_2_2__0)?
{ after(grammarAccess.getListAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__List__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2_1__0__Impl
	rule__List__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getListAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getTerm_in_listAssignment_2_1_1()); }
(rule__List__Term_in_listAssignment_2_1_1)
{ after(grammarAccess.getListAccess().getTerm_in_listAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__List__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2_2__0__Impl
	rule__List__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getVerticalLineKeyword_2_2_0()); }

	'|' 

{ after(grammarAccess.getListAccess().getVerticalLineKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getAlternatives_2_2_1()); }
(rule__List__Alternatives_2_2_1)
{ after(grammarAccess.getListAccess().getAlternatives_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Log_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr__Group__0__Impl
	rule__Log_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_exprAccess().getLog_expr_trmAssignment_0()); }
(rule__Log_expr__Log_expr_trmAssignment_0)
{ after(grammarAccess.getLog_exprAccess().getLog_expr_trmAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_exprAccess().getGroup_1()); }
(rule__Log_expr__Group_1__0)?
{ after(grammarAccess.getLog_exprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Log_expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr__Group_1__0__Impl
	rule__Log_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_exprAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getLog_exprAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log_expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_exprAccess().getLog_exprAssignment_1_1()); }
(rule__Log_expr__Log_exprAssignment_1_1)
{ after(grammarAccess.getLog_exprAccess().getLog_exprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Log_expr_trm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr_trm__Group__0__Impl
	rule__Log_expr_trm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_trm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_trmAccess().getLog_expr_factorAssignment_0()); }
(rule__Log_expr_trm__Log_expr_factorAssignment_0)
{ after(grammarAccess.getLog_expr_trmAccess().getLog_expr_factorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log_expr_trm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr_trm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_trm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_trmAccess().getGroup_1()); }
(rule__Log_expr_trm__Group_1__0)?
{ after(grammarAccess.getLog_expr_trmAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Log_expr_trm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr_trm__Group_1__0__Impl
	rule__Log_expr_trm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_trm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_trmAccess().getAmpersandKeyword_1_0()); }

	'&' 

{ after(grammarAccess.getLog_expr_trmAccess().getAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log_expr_trm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr_trm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_trm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_trmAccess().getLog_expr_trmAssignment_1_1()); }
(rule__Log_expr_trm__Log_expr_trmAssignment_1_1)
{ after(grammarAccess.getLog_expr_trmAccess().getLog_expr_trmAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Log_expr_factor__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr_factor__Group_0__0__Impl
	rule__Log_expr_factor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_factor__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_factorAccess().getTk_notAssignment_0_0()); }
(rule__Log_expr_factor__Tk_notAssignment_0_0)
{ after(grammarAccess.getLog_expr_factorAccess().getTk_notAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Log_expr_factor__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Log_expr_factor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_factor__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_factorAccess().getLog_expr_factorAssignment_0_1()); }
(rule__Log_expr_factor__Log_expr_factorAssignment_0_1)
{ after(grammarAccess.getLog_expr_factorAccess().getLog_expr_factorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rel_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_expr__Group__0__Impl
	rule__Rel_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getAlternatives_0()); }
(rule__Rel_expr__Alternatives_0)
{ after(grammarAccess.getRel_exprAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rel_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getGroup_1()); }
(rule__Rel_expr__Group_1__0)?
{ after(grammarAccess.getRel_exprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rel_expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_expr__Group_1__0__Impl
	rule__Rel_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getRelOpAssignment_1_0()); }
(rule__Rel_expr__RelOpAssignment_1_0)
{ after(grammarAccess.getRel_exprAccess().getRelOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rel_expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rel_expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getAlternatives_1_1()); }
(rule__Rel_expr__Alternatives_1_1)
{ after(grammarAccess.getRel_exprAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TK_REL_OP__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TK_REL_OP__Group_6__0__Impl
	rule__TK_REL_OP__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TK_REL_OP__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_REL_OPAccess().getEqualsSignKeyword_6_0()); }

	'=' 

{ after(grammarAccess.getTK_REL_OPAccess().getEqualsSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TK_REL_OP__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TK_REL_OP__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TK_REL_OP__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_REL_OPAccess().getGroup_6_1()); }
(rule__TK_REL_OP__Group_6_1__0)?
{ after(grammarAccess.getTK_REL_OPAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TK_REL_OP__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TK_REL_OP__Group_6_1__0__Impl
	rule__TK_REL_OP__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TK_REL_OP__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_REL_OPAccess().getFullStopKeyword_6_1_0()); }

	'.' 

{ after(grammarAccess.getTK_REL_OPAccess().getFullStopKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TK_REL_OP__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TK_REL_OP__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TK_REL_OP__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTK_REL_OPAccess().getFullStopKeyword_6_1_1()); }

	'.' 

{ after(grammarAccess.getTK_REL_OPAccess().getFullStopKeyword_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr__Group__0__Impl
	rule__Arithm_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getArithm_expr_trmAssignment_0()); }
(rule__Arithm_expr__Arithm_expr_trmAssignment_0)
{ after(grammarAccess.getArithm_exprAccess().getArithm_expr_trmAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getGroup_1()); }
(rule__Arithm_expr__Group_1__0)?
{ after(grammarAccess.getArithm_exprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr__Group_1__0__Impl
	rule__Arithm_expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getSubaddAssignment_1_0()); }
(rule__Arithm_expr__SubaddAssignment_1_0)
{ after(grammarAccess.getArithm_exprAccess().getSubaddAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getArithm_exprAssignment_1_1()); }
(rule__Arithm_expr__Arithm_exprAssignment_1_1)
{ after(grammarAccess.getArithm_exprAccess().getArithm_exprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr_trm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_trm__Group__0__Impl
	rule__Arithm_expr_trm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_factorAssignment_0()); }
(rule__Arithm_expr_trm__Arithm_expr_factorAssignment_0)
{ after(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_factorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_trm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_trm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getGroup_1()); }
(rule__Arithm_expr_trm__Group_1__0)?
{ after(grammarAccess.getArithm_expr_trmAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr_trm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_trm__Group_1__0__Impl
	rule__Arithm_expr_trm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getAlternatives_1_0()); }
(rule__Arithm_expr_trm__Alternatives_1_0)
{ after(grammarAccess.getArithm_expr_trmAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_trm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_trm__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_trmAssignment_1_1()); }
(rule__Arithm_expr_trm__Arithm_expr_trmAssignment_1_1)
{ after(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_trmAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr_factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_factor__Group__0__Impl
	rule__Arithm_expr_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_simpleAssignment_0()); }
(rule__Arithm_expr_factor__Arithm_expr_simpleAssignment_0)
{ after(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_simpleAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getGroup_1()); }
(rule__Arithm_expr_factor__Group_1__0)?
{ after(grammarAccess.getArithm_expr_factorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr_factor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_factor__Group_1__0__Impl
	rule__Arithm_expr_factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getExponentialAssignment_1_0()); }
(rule__Arithm_expr_factor__ExponentialAssignment_1_0)
{ after(grammarAccess.getArithm_expr_factorAccess().getExponentialAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_factor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_factorAssignment_1_1()); }
(rule__Arithm_expr_factor__Arithm_expr_factorAssignment_1_1)
{ after(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_factorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr_simple__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_simple__Group_1__0__Impl
	rule__Arithm_expr_simple__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getUnaryAssignment_1_0()); }
(rule__Arithm_expr_simple__UnaryAssignment_1_0)
{ after(grammarAccess.getArithm_expr_simpleAccess().getUnaryAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_simple__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_simple__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getArithm_expr_simpleAssignment_1_1()); }
(rule__Arithm_expr_simple__Arithm_expr_simpleAssignment_1_1)
{ after(grammarAccess.getArithm_expr_simpleAccess().getArithm_expr_simpleAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithm_expr_simple__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_simple__Group_2__0__Impl
	rule__Arithm_expr_simple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getArithm_expr_simpleAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_simple__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_simple__Group_2__1__Impl
	rule__Arithm_expr_simple__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getLog_exprAssignment_2_1()); }
(rule__Arithm_expr_simple__Log_exprAssignment_2_1)
{ after(grammarAccess.getArithm_expr_simpleAccess().getLog_exprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithm_expr_simple__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithm_expr_simple__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getArithm_expr_simpleAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Var__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__0__Impl
	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getAlternatives_0()); }
(rule__Var__Alternatives_0)
{ after(grammarAccess.getVarAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getListAssignment_1()); }
(rule__Var__ListAssignment_1)?
{ after(grammarAccess.getVarAccess().getListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_0__0__Impl
	rule__Number__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumberAccess().getNumberAssignment_0_0()); }
(rule__Number__NumberAssignment_0_0)
{ after(grammarAccess.getNumberAccess().getNumberAssignment_0_0()); }
)
(
{ before(grammarAccess.getNumberAccess().getNumberAssignment_0_0()); }
(rule__Number__NumberAssignment_0_0)*
{ after(grammarAccess.getNumberAccess().getNumberAssignment_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_0__1__Impl
	rule__Number__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumberAccess().getDecimalPartAssignment_0_2()); }
(rule__Number__DecimalPartAssignment_0_2)
{ after(grammarAccess.getNumberAccess().getDecimalPartAssignment_0_2()); }
)
(
{ before(grammarAccess.getNumberAccess().getDecimalPartAssignment_0_2()); }
(rule__Number__DecimalPartAssignment_0_2)*
{ after(grammarAccess.getNumberAccess().getDecimalPartAssignment_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumberAccess().getDecimalPartAssignment_1_1()); }
(rule__Number__DecimalPartAssignment_1_1)
{ after(grammarAccess.getNumberAccess().getDecimalPartAssignment_1_1()); }
)
(
{ before(grammarAccess.getNumberAccess().getDecimalPartAssignment_1_1()); }
(rule__Number__DecimalPartAssignment_1_1)*
{ after(grammarAccess.getNumberAccess().getDecimalPartAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JASON_ATOM__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JASON_ATOM__Group__0__Impl
	rule__JASON_ATOM__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JASON_ATOM__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJASON_ATOMAccess().getJASON_ATOM_HEADParserRuleCall_0()); }
	ruleJASON_ATOM_HEAD
{ after(grammarAccess.getJASON_ATOMAccess().getJASON_ATOM_HEADParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JASON_ATOM__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JASON_ATOM__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JASON_ATOM__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJASON_ATOMAccess().getJASON_ATOM_TAILParserRuleCall_1()); }
(	ruleJASON_ATOM_TAIL)*
{ after(grammarAccess.getJASON_ATOMAccess().getJASON_ATOM_TAILParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JASON_ATOM_HEAD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JASON_ATOM_HEAD__Group__0__Impl
	rule__JASON_ATOM_HEAD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JASON_ATOM_HEAD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJASON_ATOM_HEADAccess().getFullStopKeyword_0()); }
(
	'.' 
)?
{ after(grammarAccess.getJASON_ATOM_HEADAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JASON_ATOM_HEAD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JASON_ATOM_HEAD__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JASON_ATOM_HEAD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJASON_ATOM_HEADAccess().getATOMTerminalRuleCall_1()); }
	RULE_ATOM
{ after(grammarAccess.getJASON_ATOM_HEADAccess().getATOMTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JASON_ATOM_TAIL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JASON_ATOM_TAIL__Group__0__Impl
	rule__JASON_ATOM_TAIL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JASON_ATOM_TAIL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJASON_ATOM_TAILAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getJASON_ATOM_TAILAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JASON_ATOM_TAIL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JASON_ATOM_TAIL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JASON_ATOM_TAIL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJASON_ATOM_TAILAccess().getATOMTerminalRuleCall_1()); }
	RULE_ATOM
{ after(grammarAccess.getJASON_ATOM_TAILAccess().getATOMTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Agent__DirectiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_0_0()); }
	ruleDirective{ after(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__BeliefAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getBeliefBeliefParserRuleCall_1_0_0()); }
	ruleBelief{ after(grammarAccess.getAgentAccess().getBeliefBeliefParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__DirectiveAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_1_1_0()); }
	ruleDirective{ after(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Initial_goalAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getInitial_goalInitial_goalParserRuleCall_2_0_0()); }
	ruleInitial_goal{ after(grammarAccess.getAgentAccess().getInitial_goalInitial_goalParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__DirectiveAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_2_1_0()); }
	ruleDirective{ after(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__PlanAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getPlanPlanParserRuleCall_3_0_0()); }
	rulePlan{ after(grammarAccess.getAgentAccess().getPlanPlanParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__BeliefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getBeliefBeliefParserRuleCall_3_1_0()); }
	ruleBelief{ after(grammarAccess.getAgentAccess().getBeliefBeliefParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__DirectiveAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_3_2_0()); }
	ruleDirective{ after(grammarAccess.getAgentAccess().getDirectiveDirectiveParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Tk_beginAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getTk_beginTK_BEGINParserRuleCall_1_0_0_0()); }
	ruleTK_BEGIN{ after(grammarAccess.getDirectiveAccess().getTk_beginTK_BEGINParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__PredAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getPredPredParserRuleCall_1_0_1_0()); }
	rulePred{ after(grammarAccess.getDirectiveAccess().getPredPredParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__AgentAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getAgentAgentParserRuleCall_1_0_3_0()); }
	ruleAgent{ after(grammarAccess.getDirectiveAccess().getAgentAgentParserRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Pred2Assignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getPred2PredParserRuleCall_1_1_0_0()); }
	rulePred{ after(grammarAccess.getDirectiveAccess().getPred2PredParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__LiteralAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getLiteralLiteralParserRuleCall_0_0()); }
	ruleLiteral{ after(grammarAccess.getBeliefAccess().getLiteralLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Belief__Log_exprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeliefAccess().getLog_exprLog_exprParserRuleCall_1_1_0()); }
	ruleLog_expr{ after(grammarAccess.getBeliefAccess().getLog_exprLog_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_goal__LiteralAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_goalAccess().getLiteralLiteralParserRuleCall_1_0()); }
	ruleLiteral{ after(grammarAccess.getInitial_goalAccess().getLiteralLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Tk_label_atAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getTk_label_atTK_LABEL_ATTerminalRuleCall_0_0_0()); }
	RULE_TK_LABEL_AT{ after(grammarAccess.getPlanAccess().getTk_label_atTK_LABEL_ATTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__PredAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getPredPredParserRuleCall_0_1_0()); }
	rulePred{ after(grammarAccess.getPlanAccess().getPredPredParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__TriggerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getTriggerTriggerParserRuleCall_1_0()); }
	ruleTrigger{ after(grammarAccess.getPlanAccess().getTriggerTriggerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Log_exprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getLog_exprLog_exprParserRuleCall_2_1_0()); }
	ruleLog_expr{ after(grammarAccess.getPlanAccess().getLog_exprLog_exprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan__Plan_bodyAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlanAccess().getPlan_bodyPlan_bodyParserRuleCall_3_1_0()); }
	rulePlan_body{ after(grammarAccess.getPlanAccess().getPlan_bodyPlan_bodyParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__TriggerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerTriggerSymbolParserRuleCall_0_0()); }
	ruleTriggerSymbol{ after(grammarAccess.getTriggerAccess().getTriggerTriggerSymbolParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__LiteralAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getLiteralLiteralParserRuleCall_1_0_0()); }
	ruleLiteral{ after(grammarAccess.getTriggerAccess().getLiteralLiteralParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__VarAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getVarVarParserRuleCall_1_1_0()); }
	ruleVar{ after(grammarAccess.getTriggerAccess().getVarVarParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body__Plan_body_termAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_bodyAccess().getPlan_body_termPlan_body_termParserRuleCall_0_0()); }
	rulePlan_body_term{ after(grammarAccess.getPlan_bodyAccess().getPlan_body_termPlan_body_termParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body__Plan_bodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_bodyAccess().getPlan_bodyPlan_bodyParserRuleCall_2_0()); }
	rulePlan_body{ after(grammarAccess.getPlan_bodyAccess().getPlan_bodyPlan_bodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_term__Plan_body_factorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_termAccess().getPlan_body_factorPlan_body_factorParserRuleCall_0_0()); }
	rulePlan_body_factor{ after(grammarAccess.getPlan_body_termAccess().getPlan_body_factorPlan_body_factorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_term__Plan_body_termAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_termAccess().getPlan_body_termPlan_body_termParserRuleCall_1_1_0()); }
	rulePlan_body_term{ after(grammarAccess.getPlan_body_termAccess().getPlan_body_termPlan_body_termParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__StmtIFAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getStmtIFStmtIFParserRuleCall_0_0_0()); }
	ruleStmtIF{ after(grammarAccess.getPlan_body_factorAccess().getStmtIFStmtIFParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__StmtFORAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getStmtFORStmtFORParserRuleCall_0_1_0()); }
	ruleStmtFOR{ after(grammarAccess.getPlan_body_factorAccess().getStmtFORStmtFORParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__StmtWHILEAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getStmtWHILEStmtWHILEParserRuleCall_0_2_0()); }
	ruleStmtWHILE{ after(grammarAccess.getPlan_body_factorAccess().getStmtWHILEStmtWHILEParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Body_formulaAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getBody_formulaBody_formulaParserRuleCall_0_3_0()); }
	ruleBody_formula{ after(grammarAccess.getPlan_body_factorAccess().getBody_formulaBody_formulaParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_body_factor__Plan_body_factorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_body_factorAccess().getPlan_body_factorPlan_body_factorParserRuleCall_1_1_0()); }
	rulePlan_body_factor{ after(grammarAccess.getPlan_body_factorAccess().getPlan_body_factorPlan_body_factorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Tk_ifAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getTk_ifTK_IFParserRuleCall_0_0()); }
	ruleTK_IF{ after(grammarAccess.getStmtIFAccess().getTk_ifTK_IFParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Log_exprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
	ruleLog_expr{ after(grammarAccess.getStmtIFAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Plan_termAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getPlan_termPlan_termParserRuleCall_4_0()); }
	rulePlan_term{ after(grammarAccess.getStmtIFAccess().getPlan_termPlan_termParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Tk_elseAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getTk_elseTK_ELSEParserRuleCall_5_0_0()); }
	ruleTK_ELSE{ after(grammarAccess.getStmtIFAccess().getTk_elseTK_ELSEParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIF__Plan_term2Assignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIFAccess().getPlan_term2Plan_termParserRuleCall_5_1_0()); }
	rulePlan_term{ after(grammarAccess.getStmtIFAccess().getPlan_term2Plan_termParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Tk_forAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getTk_forTK_FORParserRuleCall_0_0()); }
	ruleTK_FOR{ after(grammarAccess.getStmtFORAccess().getTk_forTK_FORParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Log_exprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
	ruleLog_expr{ after(grammarAccess.getStmtFORAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtFOR__Plan_termAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtFORAccess().getPlan_termPlan_termParserRuleCall_4_0()); }
	rulePlan_term{ after(grammarAccess.getStmtFORAccess().getPlan_termPlan_termParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Tk_whileAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getTk_whileTK_WHILEParserRuleCall_0_0()); }
	ruleTK_WHILE{ after(grammarAccess.getStmtWHILEAccess().getTk_whileTK_WHILEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Log_exprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
	ruleLog_expr{ after(grammarAccess.getStmtWHILEAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWHILE__Plan_termAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWHILEAccess().getPlan_termPlan_termParserRuleCall_4_0()); }
	rulePlan_term{ after(grammarAccess.getStmtWHILEAccess().getPlan_termPlan_termParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Plan_termAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getPlan_termPlan_termParserRuleCall_1_0_0()); }
	rulePlan_term{ after(grammarAccess.getBody_formulaAccess().getPlan_termPlan_termParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body_formula__Log_exprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBody_formulaAccess().getLog_exprLog_exprParserRuleCall_1_1_0()); }
	ruleLog_expr{ after(grammarAccess.getBody_formulaAccess().getLog_exprLog_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Tk_label_atAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getTk_label_atTK_LABEL_ATTerminalRuleCall_2_0_0_0()); }
	RULE_TK_LABEL_AT{ after(grammarAccess.getPlan_termAccess().getTk_label_atTK_LABEL_ATTerminalRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__PredAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getPredPredParserRuleCall_2_0_1_0()); }
	rulePred{ after(grammarAccess.getPlan_termAccess().getPredPredParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__TriggerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getTriggerTriggerParserRuleCall_2_1_0()); }
	ruleTrigger{ after(grammarAccess.getPlan_termAccess().getTriggerTriggerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Log_exprAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLog_exprLog_exprParserRuleCall_2_2_1_0()); }
	ruleLog_expr{ after(grammarAccess.getPlan_termAccess().getLog_exprLog_exprParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__LiteralAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLiteralLiteralParserRuleCall_3_0_0()); }
	ruleLiteral{ after(grammarAccess.getPlan_termAccess().getLiteralLiteralParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Log_expr2Assignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getLog_expr2Log_exprParserRuleCall_3_2_0()); }
	ruleLog_expr{ after(grammarAccess.getPlan_termAccess().getLog_expr2Log_exprParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Plan_term__Plan_bodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlan_termAccess().getPlan_bodyPlan_bodyParserRuleCall_4_0()); }
	rulePlan_body{ after(grammarAccess.getPlan_termAccess().getPlan_bodyPlan_bodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__AtomAssignment_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getAtomJASON_ATOMParserRuleCall_0_0_0_0_0()); }
	ruleJASON_ATOM{ after(grammarAccess.getLiteralAccess().getAtomJASON_ATOMParserRuleCall_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__VarAssignment_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getVarVarParserRuleCall_0_0_0_1_0()); }
	ruleVar{ after(grammarAccess.getLiteralAccess().getVarVarParserRuleCall_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Tk_negAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getTk_negTK_NEGTerminalRuleCall_0_1_0()); }
	RULE_TK_NEG{ after(grammarAccess.getLiteralAccess().getTk_negTK_NEGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__PredAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getPredPredParserRuleCall_0_2_0_0()); }
	rulePred{ after(grammarAccess.getLiteralAccess().getPredPredParserRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Var2Assignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getVar2VarParserRuleCall_0_2_1_0()); }
	ruleVar{ after(grammarAccess.getLiteralAccess().getVar2VarParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Tk_trueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getTk_trueTK_TRUEParserRuleCall_1_0()); }
	ruleTK_TRUE{ after(grammarAccess.getLiteralAccess().getTk_trueTK_TRUEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Tk_falseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getTk_falseTK_FALSEParserRuleCall_2_0()); }
	ruleTK_FALSE{ after(grammarAccess.getLiteralAccess().getTk_falseTK_FALSEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__AtomAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getAtomJASON_ATOMParserRuleCall_0_0_0()); }
	ruleJASON_ATOM{ after(grammarAccess.getPredAccess().getAtomJASON_ATOMParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Tk_beginAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getTk_beginTK_BEGINParserRuleCall_0_1_0()); }
	ruleTK_BEGIN{ after(grammarAccess.getPredAccess().getTk_beginTK_BEGINParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Tk_endAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getTk_endTK_ENDParserRuleCall_0_2_0()); }
	ruleTK_END{ after(grammarAccess.getPredAccess().getTk_endTK_ENDParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__TermsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getTermsTermsParserRuleCall_1_1_0()); }
	ruleTerms{ after(grammarAccess.getPredAccess().getTermsTermsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__Plan_termAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getPlan_termPlan_termParserRuleCall_2_0()); }
	rulePlan_term{ after(grammarAccess.getPredAccess().getPlan_termPlan_termParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pred__ListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredAccess().getListListParserRuleCall_3_0()); }
	ruleList{ after(grammarAccess.getPredAccess().getListListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terms__TermAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermsAccess().getTermTermParserRuleCall_0_0()); }
	ruleTerm{ after(grammarAccess.getTermsAccess().getTermTermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terms__TermAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermsAccess().getTermTermParserRuleCall_1_1_0()); }
	ruleTerm{ after(grammarAccess.getTermsAccess().getTermTermParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__ListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getListListParserRuleCall_0_0()); }
	ruleList{ after(grammarAccess.getTermAccess().getListListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Plan_termAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getPlan_termPlan_termParserRuleCall_1_0()); }
	rulePlan_term{ after(grammarAccess.getTermAccess().getPlan_termPlan_termParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Log_exprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
	ruleLog_expr{ after(grammarAccess.getTermAccess().getLog_exprLog_exprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__Term_in_listAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getTerm_in_listTerm_in_listParserRuleCall_2_0_0()); }
	ruleTerm_in_list{ after(grammarAccess.getListAccess().getTerm_in_listTerm_in_listParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__Term_in_listAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getTerm_in_listTerm_in_listParserRuleCall_2_1_1_0()); }
	ruleTerm_in_list{ after(grammarAccess.getListAccess().getTerm_in_listTerm_in_listParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__VarAssignment_2_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getVarVARTTerminalRuleCall_2_2_1_0_0()); }
	RULE_VART{ after(grammarAccess.getListAccess().getVarVARTTerminalRuleCall_2_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__UnnamedvarAssignment_2_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getUnnamedvarUNNAMEDVARTTerminalRuleCall_2_2_1_1_0()); }
	RULE_UNNAMEDVART{ after(grammarAccess.getListAccess().getUnnamedvarUNNAMEDVARTTerminalRuleCall_2_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List__ListAssignment_2_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListAccess().getListListParserRuleCall_2_2_1_2_0()); }
	ruleList{ after(grammarAccess.getListAccess().getListListParserRuleCall_2_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term_in_list__ListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerm_in_listAccess().getListListParserRuleCall_0_0()); }
	ruleList{ after(grammarAccess.getTerm_in_listAccess().getListListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term_in_list__Arithm_exprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerm_in_listAccess().getArithm_exprArithm_exprParserRuleCall_1_0()); }
	ruleArithm_expr{ after(grammarAccess.getTerm_in_listAccess().getArithm_exprArithm_exprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term_in_list__StringAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerm_in_listAccess().getStringStringParserRuleCall_2_0()); }
	ruleString{ after(grammarAccess.getTerm_in_listAccess().getStringStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term_in_list__Plan_termAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerm_in_listAccess().getPlan_termPlan_termParserRuleCall_3_0()); }
	rulePlan_term{ after(grammarAccess.getTerm_in_listAccess().getPlan_termPlan_termParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr__Log_expr_trmAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_exprAccess().getLog_expr_trmLog_expr_trmParserRuleCall_0_0()); }
	ruleLog_expr_trm{ after(grammarAccess.getLog_exprAccess().getLog_expr_trmLog_expr_trmParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr__Log_exprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_exprAccess().getLog_exprLog_exprParserRuleCall_1_1_0()); }
	ruleLog_expr{ after(grammarAccess.getLog_exprAccess().getLog_exprLog_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_trm__Log_expr_factorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_trmAccess().getLog_expr_factorLog_expr_factorParserRuleCall_0_0()); }
	ruleLog_expr_factor{ after(grammarAccess.getLog_expr_trmAccess().getLog_expr_factorLog_expr_factorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_trm__Log_expr_trmAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_trmAccess().getLog_expr_trmLog_expr_trmParserRuleCall_1_1_0()); }
	ruleLog_expr_trm{ after(grammarAccess.getLog_expr_trmAccess().getLog_expr_trmLog_expr_trmParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_factor__Tk_notAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_factorAccess().getTk_notTK_NOTParserRuleCall_0_0_0()); }
	ruleTK_NOT{ after(grammarAccess.getLog_expr_factorAccess().getTk_notTK_NOTParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_factor__Log_expr_factorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_factorAccess().getLog_expr_factorLog_expr_factorParserRuleCall_0_1_0()); }
	ruleLog_expr_factor{ after(grammarAccess.getLog_expr_factorAccess().getLog_expr_factorLog_expr_factorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Log_expr_factor__Rel_exprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLog_expr_factorAccess().getRel_exprRel_exprParserRuleCall_1_0()); }
	ruleRel_expr{ after(grammarAccess.getLog_expr_factorAccess().getRel_exprRel_exprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Arithm_expAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getArithm_expArithm_exprParserRuleCall_0_0_0()); }
	ruleArithm_expr{ after(grammarAccess.getRel_exprAccess().getArithm_expArithm_exprParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__StringAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getStringStringParserRuleCall_0_1_0()); }
	ruleString{ after(grammarAccess.getRel_exprAccess().getStringStringParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__RelOpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getRelOpTK_REL_OPParserRuleCall_1_0_0()); }
	ruleTK_REL_OP{ after(grammarAccess.getRel_exprAccess().getRelOpTK_REL_OPParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Arithm_exprAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getArithm_exprArithm_exprParserRuleCall_1_1_0_0()); }
	ruleArithm_expr{ after(grammarAccess.getRel_exprAccess().getArithm_exprArithm_exprParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__String2Assignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getString2StringParserRuleCall_1_1_1_0()); }
	ruleString{ after(grammarAccess.getRel_exprAccess().getString2StringParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__ListAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getListListParserRuleCall_1_1_2_0()); }
	ruleList{ after(grammarAccess.getRel_exprAccess().getListListParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rel_expr__Plan_termAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRel_exprAccess().getPlan_termPlan_termParserRuleCall_1_1_3_0()); }
	rulePlan_term{ after(grammarAccess.getRel_exprAccess().getPlan_termPlan_termParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__Arithm_expr_trmAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getArithm_expr_trmArithm_expr_trmParserRuleCall_0_0()); }
	ruleArithm_expr_trm{ after(grammarAccess.getArithm_exprAccess().getArithm_expr_trmArithm_expr_trmParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__SubaddAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getSubaddTK_SUB_ADDParserRuleCall_1_0_0()); }
	ruleTK_SUB_ADD{ after(grammarAccess.getArithm_exprAccess().getSubaddTK_SUB_ADDParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr__Arithm_exprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_exprAccess().getArithm_exprArithm_exprParserRuleCall_1_1_0()); }
	ruleArithm_expr{ after(grammarAccess.getArithm_exprAccess().getArithm_exprArithm_exprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Arithm_expr_factorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_factorArithm_expr_factorParserRuleCall_0_0()); }
	ruleArithm_expr_factor{ after(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_factorArithm_expr_factorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__MuldivAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getMuldivTK_MUL_DIVParserRuleCall_1_0_0_0()); }
	ruleTK_MUL_DIV{ after(grammarAccess.getArithm_expr_trmAccess().getMuldivTK_MUL_DIVParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Tk_intdivAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getTk_intdivTK_INTDIVParserRuleCall_1_0_1_0()); }
	ruleTK_INTDIV{ after(grammarAccess.getArithm_expr_trmAccess().getTk_intdivTK_INTDIVParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Tk_intmodAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getTk_intmodTK_INTMODParserRuleCall_1_0_2_0()); }
	ruleTK_INTMOD{ after(grammarAccess.getArithm_expr_trmAccess().getTk_intmodTK_INTMODParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_trm__Arithm_expr_trmAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_trmArithm_expr_trmParserRuleCall_1_1_0()); }
	ruleArithm_expr_trm{ after(grammarAccess.getArithm_expr_trmAccess().getArithm_expr_trmArithm_expr_trmParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__Arithm_expr_simpleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_simpleArithm_expr_simpleParserRuleCall_0_0()); }
	ruleArithm_expr_simple{ after(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_simpleArithm_expr_simpleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__ExponentialAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getExponentialTK_EXPONENTIALParserRuleCall_1_0_0()); }
	ruleTK_EXPONENTIAL{ after(grammarAccess.getArithm_expr_factorAccess().getExponentialTK_EXPONENTIALParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_factor__Arithm_expr_factorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_factorArithm_expr_factorParserRuleCall_1_1_0()); }
	ruleArithm_expr_factor{ after(grammarAccess.getArithm_expr_factorAccess().getArithm_expr_factorArithm_expr_factorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__NumberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getNumberNumberParserRuleCall_0_0()); }
	ruleNumber{ after(grammarAccess.getArithm_expr_simpleAccess().getNumberNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__UnaryAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getUnaryTK_UNARY_OPParserRuleCall_1_0_0()); }
	ruleTK_UNARY_OP{ after(grammarAccess.getArithm_expr_simpleAccess().getUnaryTK_UNARY_OPParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Arithm_expr_simpleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getArithm_expr_simpleArithm_expr_simpleParserRuleCall_1_1_0()); }
	ruleArithm_expr_simple{ after(grammarAccess.getArithm_expr_simpleAccess().getArithm_expr_simpleArithm_expr_simpleParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__Log_exprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getLog_exprLog_exprParserRuleCall_2_1_0()); }
	ruleLog_expr{ after(grammarAccess.getArithm_expr_simpleAccess().getLog_exprLog_exprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithm_expr_simple__FunctionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithm_expr_simpleAccess().getFunctionFunctionParserRuleCall_3_0()); }
	ruleFunction{ after(grammarAccess.getArithm_expr_simpleAccess().getFunctionFunctionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLiteralLiteralParserRuleCall_0()); }
	ruleLiteral{ after(grammarAccess.getFunctionAccess().getLiteralLiteralParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VarAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getVarVARTTerminalRuleCall_0_0_0()); }
	RULE_VART{ after(grammarAccess.getVarAccess().getVarVARTTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__UnnamedvarAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getUnnamedvarUNNAMEDVARTTerminalRuleCall_0_1_0()); }
	RULE_UNNAMEDVART{ after(grammarAccess.getVarAccess().getUnnamedvarUNNAMEDVARTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__ListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getListListParserRuleCall_1_0()); }
	ruleList{ after(grammarAccess.getVarAccess().getListListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__String__StringAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringAccess().getStringSTRINGTTerminalRuleCall_0()); }
	RULE_STRINGT{ after(grammarAccess.getStringAccess().getStringSTRINGTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NumberAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getNumberNUMBERTTerminalRuleCall_0_0_0()); }
	RULE_NUMBERT{ after(grammarAccess.getNumberAccess().getNumberNUMBERTTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalPartAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getDecimalPartNUMBERTTerminalRuleCall_0_2_0()); }
	RULE_NUMBERT{ after(grammarAccess.getNumberAccess().getDecimalPartNUMBERTTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalPartAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getDecimalPartNUMBERTTerminalRuleCall_1_1_0()); }
	RULE_NUMBERT{ after(grammarAccess.getNumberAccess().getDecimalPartNUMBERTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NumberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getNumberNUMBERTTerminalRuleCall_2_0()); }
	RULE_NUMBERT{ after(grammarAccess.getNumberAccess().getNumberNUMBERTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TK_LABEL_AT : '@';

RULE_TK_NEG : '~';

RULE_ATOM : RULE_LCLETTER RULE_CH*;

RULE_VART : RULE_UCLETTER RULE_CH*;

RULE_UNNAMEDVART : '_' RULE_CH*;

RULE_STRINGT : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_NUMBERT : '0'..'9';

fragment RULE_CH : (RULE_LCLETTER|RULE_UCLETTER|RULE_DIGIT|'_');

fragment RULE_LCLETTER : 'a'..'z';

fragment RULE_UCLETTER : 'A'..'Z';

fragment RULE_DIGIT : '0'..'9';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;


